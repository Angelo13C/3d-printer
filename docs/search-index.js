var searchIndex = JSON.parse('{\
"firmware_core":{"doc":"This crate","t":"CAANNNEDENLLLLLLAALLLLLLLLLALLLLLLLLLLDDNNENNDNNNNEENNLLLLLLLLLLLLAMMLLLLLLLLLLALLLLLLMLLLLALAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIQLKANDEQINNDLLLLLLLLLLLLLLLKLLLLLLLLLLMAAAANEDDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLALLLDLLLLLFLLFLLLLNNEDNNNNNNNRNNLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLDDLLLLLLMMLLMLLLLLMMMMLLLLLLLLNDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDEIQDNNNENIIDLLLLLLLLLLKLLLLLLLLLLLLLKLKLLLLLLLMLLLLLLLLLLLLLLLLMMMMMQQENQQQQQNQQNQNQQQNNQNNIDQQQQQQEQQQQQQQQMLLLLLLMAAALLLLLAMKAMMMLLLMAAMLAAKKKKKKKKKKKKKKKKKKKKKKKKKKKKKALALLLLLLLLLMMDLLLMMMLMMALLLDDDMMLLLLLLLLLLLLMMMMMMMMLLLLLLLLLAAAAAAAANNDENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLDLLLLLLLLLSRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSNNNNSNNEIISSSSSSSDNSSSSSSSDNELLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDLLLLLLLLLLLLLLLLLLALLLLLLLNNNNENNNNNNNNNEENNNNENENNNNNNNNNNSNNNENENNNNNNNNENNNENNSSNDNENDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNLLLLLLLLLLLLLLLLLLLLLLLLLNNNLLLLLLLLLLLLNNLLNLNLLNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNRDLLLLLLLLLNNEENDNNALLLLLLLLLLLLLLLLLLLALLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLDLLALMLLLALMLLLNNNNDDDNEENNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDDDDDDSLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLINNIENKLLLLALALLLLAALLLLLDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMNNDDENNRELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLALLLLLLADDDIIISDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDLLLLLLLLKLLLLLLLNNNNNEDLLLLLLLLLLLLLLLLLLLLAAAAAAIIINQNEQLLLLLKKKLLLNQNINNNELLLLLLLLLKLLLLQIKKKQQQIIFKKKKKKKKFQIKKKQIQIKKDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNDEDNDDRDENNAAMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLALLLLLLLAMMMLLLLLLMLAMMMMMLLLLLAMMLLLLLLLLLLLLLLLLLLLLLMMMMMENNNNLLLLLLLLLLLLLNQQNQDDENILLLLLLLLKLLLLLLLLLLKLLLKLKLLLLLLLLLLLLNNEENNNNNENNNLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMIQQDQLLLLLLKLLKLLLLLLLDDIKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLNDDENDNDNDGMMMMLLLLLLLLLLLLLLLLLLLLAMLLLMLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLMMMMMMLMMLLLMMLLLMMLLLLMLLLLLLLLLLLLLLLLLLDDMMLLLLLLMLLLFLLFFMLMLFFFLLLLLLLENENNNDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFFFNNNDDEDNFLLLLLLLLMMLLLLLFLLLLLLLLLLMMFLLLLLLLLLLLLLNSSENNDDLLLLLLLLLLMLLLLLLLLLLLLMLLLLMALLLLLLLLLLLLLLNNNNEDALLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLDLLLLLLLLLIDDLLLLLLLLLMLLLALMKKLLLLLLLDDLLLLLLLLLLLLLLLLLLLLDILLKLLLLLLLKLLLLDLLLLLLLAAAAAFDLLLLLLLLLLLLLFSIDSLLKLLFLLLLLLLLLLFFLKLLLLLAGGDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAGGIDSSISSSSSSSSSSKKLKLLLKLKLKLKLKLLLLLLKLKLKLLFLLLLLLLLLLLKLLLLLLLLFKLKLKLLLKLKLKLKLLLLKLKLSDSNSSNSESLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDSLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLL","n":["embedded_hal","printer","utils","Communication","Components","Components","CreationError","Printer3D","TickError","WatchdogReset","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","communication","components","fmt","fmt","from","from","from","into","into","into","new","panic_handler","tick","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Communication","CommunicationConfig","CommunicationThread","ComponentsThread","CreationError","FileSystem","HttpServer","MultiThreadCommunication","PeripheralMissing","PrintProcessTick","Security","Send","SendablePeripherals","TickError","Wifi","WifiRegisterRequests","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","communicator","delay_between_ticks","file_system","fmt","fmt","from","from","from","from","from","from","get_ip_address_from_wifi_driver_function","get_join_handle","http","into","into","into","into","into","into","max_commands_in_buffer_before_reading_new","new","new","of_communication_thread","of_components_thread","ota","reboot_fn","security","security","take_adc","take_bed_cartridge_heater_pin","take_bed_thermistor_pin","take_extruder_motor_dir_pin","take_extruder_motor_step_pin","take_flash_chip","take_flash_spi","take_hotend_cartridge_heater_pin","take_hotend_fan_pin","take_hotend_thermistor_pin","take_http_server","take_kinematics","take_layer_fan_pin","take_left_motor_dir_pin","take_left_motor_step_pin","take_ota","take_right_motor_dir_pin","take_right_motor_step_pin","take_stepper_ticker_timer","take_system_time","take_uart_driver","take_watchdog_creator","take_wifi_driver","take_x_axis_endstop","take_y_axis_endstop","take_z_axis_endstop","take_z_axis_motor_dir_pin","take_z_axis_motor_step_pin","tick","tick","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","wifi","name","adc","bed_cartridge_heater_pin","bed_thermistor_pin","extruder_motor_dir_pin","extruder_motor_step_pin","flash_chip","flash_spi","hotend_cartridge_heater_pin","hotend_fan_pin","hotend_thermistor_pin","kinematics","layer_fan_pin","left_motor_dir_pin","left_motor_step_pin","ota","right_motor_dir_pin","right_motor_step_pin","server","stepper_ticker_timer","system_time","system_time","uart_driver","watchdog_creator","watchdog_creator","wifi_driver","x_axis_endstop","y_axis_endstop","z_axis_endstop","z_axis_motor_dir_pin","z_axis_motor_step_pin","Communicator","Error","register_all_requests","register_request","wifi","Connect","CreationConfig","CreationError","Error","HttpServer","SetConfiguration","Start","WifiCommunicator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","get_driver","into","into","into","new","register_request","register_request","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wifi_client_configuration","command","other","request","resources","AddGCodeCommandsToBuffer","Command","CommandsReceiver","CommandsSender","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","execute","from","from","from","into","into","into","iterate_received_commands","new","send_command","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","GCodeHistory","add_read_lines","borrow","borrow_mut","from","get_lines_from_history","into","new","printer_state","try_from","try_into","type_id","PrinterState","borrow","borrow_mut","clone","clone_into","from","get_current_state","into","serialize","tick","to_owned","try_from","try_into","type_id","DeleteFile","GetPrintStatus","HttpRequest","HttpRequestIter","ListFiles","ListGCodeCommandsInMemory","Move","OTAUpdate","PauseOrResume","PrintFile","PrinterState","STACK_SIZE","SendFile","SendGCodeCommands","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","from","from","get_callback","get_method","get_uri","http_request_handlers_count","into","into","into_iter","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Resources","ResourcesImpl","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command_sender","file_system","from","from","g_code_history","get_file_system_and_print_process","into","into","lock","new","ota_updater","print_process","security","system_time","to_owned","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","OtaWrite","OverTheAirUpdate","OverTheAirUpdateWriteError","OverTheAirUpdater","WrittenMoreBytesThanUpdateSize","abort","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","complete","fmt","from","from","from","initiate_update","into","into","into","needs_reboot","new","reboot","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","BruteForceProtection","Configuration","CreationError","GetIpAddress","Input","IpAddress","None","Password","PasswordAndBruteforce","PasswordConfiguration","PasswordProtection","Protection","ProtectionInput","Security","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_pass","can_pass","clone","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","generate","generate","get_ip_address","hash","into","into","into","into","into","new","password","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","delays_and_wrong_attempts_count_for_it","hash_settings","hash_settings","password","password","Adc","CartridgeHeaterPin","CreationError","Endstop","ExtruderDirPin","ExtruderStepPin","FanPin","FlashChip","FlashSpi","GCodeExecuter","HeatedBedAdcPin","HeatedBedHeaterPin","HeatedBedPidController","HotendAdcPin","HotendPidController","Kinematics","LeftDirPin","LeftStepPin","MotionController","MotionController","Ota","PausingMotionController","PeripheralMissing","Peripherals","Printer3DComponents","RightDirPin","RightStepPin","Server","ServerError","StepperTickerTimer","SystemTime","TickError","UartDriver","WatchdogCreator","WifiDriver","XAxisEndstop","YAxisEndstop","ZAxisDirPin","ZAxisEndstop","ZAxisStepPin","adc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clock","config","drivers","file_system","fmt","fmt","from","from","from","g_code","g_code_executer","get_ip_address_from_wifi_driver_function","hal","heated_bed_pid_controller","hotend_fan","hotend_pid_controller","into","into","into","layer_fan","mock","motion","motion_controller","new","pauser","print_process","reboot_fn","take_adc","take_bed_cartridge_heater_pin","take_bed_thermistor_pin","take_extruder_motor_dir_pin","take_extruder_motor_step_pin","take_flash_chip","take_flash_spi","take_hotend_cartridge_heater_pin","take_hotend_fan_pin","take_hotend_thermistor_pin","take_http_server","take_kinematics","take_layer_fan_pin","take_left_motor_dir_pin","take_left_motor_step_pin","take_ota","take_right_motor_dir_pin","take_right_motor_step_pin","take_stepper_ticker_timer","take_system_time","take_uart_driver","take_watchdog_creator","take_wifi_driver","take_x_axis_endstop","take_y_axis_endstop","take_z_axis_endstop","take_z_axis_motor_dir_pin","take_z_axis_motor_step_pin","temperature","tick","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uart_driver","name","ComponentsConfig","borrow","borrow_mut","from","heated_bed_pid","hotend_fan_min_duty_cycle_to_move","hotend_pid","into","layer_fan_min_duty_cycle_to_move","motion_controller","temperature","try_from","try_into","type_id","PidConfig","SafetyConfig","ThermistorConfig","allowed_temperature_range","beta","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","keep_target_temperature_config","other_resistance","pid_gains","resistance_at_t0","rise_to_target_temperature_config","rise_to_target_temperature_samples_count","safety","thermistor","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","bl_touch","button","cartridge_heater","fan","servo_motor","spi_flash_memory","stepper_motor","thermistor","AlarmReleaseAndStow","AlarmReleaseAndSwMode","BLTouch","BLTouchCommand","Deploy","ModeStore","OdMode","SelfTest","Stow","V5Mode","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","finish_homing","fmt","from","from","into","into","is_end_reached","new","on_end_reached","on_touch","prepare_for_homing","send_command","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Button","borrow","borrow_mut","from","into","is_end_reached","is_high","is_low","is_pressed","new","on_end_reached","on_pressed","subscribe_to_interrupt","try_from","try_into","type_id","CartridgeHeater","borrow","borrow_mut","from","into","new","set_heat_percentage","try_from","try_into","type_id","Fan","borrow","borrow_mut","from","into","new","set_speed","try_from","try_into","type_id","NEUTRAL","REFRESH_RATE","ServoMotor","ServoPosition","as_angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","fmt","from","from","from_angle","from_pulse_duration","get_target_position","into","into","move_to","new","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BLOCKS_PER_PLANE","BLOCK_SIZE","BLOCK_SIZE","BlockLock","BothIdsDontMatch","Configuration","CoudlntReadSpi","DEVICE_ID","DeviceIdDoesntMatch","DieSelect","FeatureRegister","FlashMemoryChip","FlashMemoryChipExt","LUNS_PER_DEVICE","LUN_SIZE","LUN_SIZE","MANUFACTURER_ID","MAX_CLOCK_FREQUENCY","MEMORY_SIZE","MEMORY_SIZE","MT29F2G01ABAGDWB","ManufacturerIdDoesntMatch","PAGES_PER_BLOCK","PAGE_ECC_SIZE","PAGE_SIZE","PLANES_PER_LUN","PLANE_SIZE","PLANE_SIZE","SPI_MODE","SpiFlashMemory","Status","ValidateIdError","address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains_bad_block_mark","contains_bad_block_mark","eq","eq","erase_blocks","fmt","fmt","fmt","from","from","from","from","get_address_of_block_index","get_address_of_block_index","get_block_index_of_address","get_block_index_of_address","get_chip_mut","get_features","hash","initialize","initialize","internal_data_move","into","into","into","into","new","program","read","read_ecc","reset","set_features","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_id","CCW","CW","RotationalDirection","StepperMotor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","end_step_pulse","eq","fmt","from","from","from_sign","into","into","new","opposite","set_rotation_direction","start_step_pulse","tmc2209","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","A0","A1","A2","A3","CHOPCONF","DEDGE","DIAG","DIR","DISS2G","DISS2VS","ENN","FREEWHEEL","FULLSTEP","FlushEchoInvalidSize","GCONF","GSTAT","HEND","HSTRT","IHOLD","IHOLDDELAY","IHOLD_IRUN","INTPOL","IOIN","IRUN","I_scale_analog","M128","M16","M2","M256","M32","M4","M64","M8","MAX_RESOLUTION","MRES","MS1","MS2","MicrostepsPerStep","PDN_UART","PWMCONF","PWM_AUTOGRAD","PWM_AUTOSCALE","PWM_FREQ0","PWM_FREQ1","PWM_GRAD","PWM_LIM","PWM_OFS","PWM_REG","ReadRegisterError","ReplyDatagramIncomplete","ReplyDatagramInvaild","SENDDELAY","SLAVECONF","SPREAD_EN","STEP","STEP_MIN_HIGH_TIME","STEP_MIN_LOW_TIME","TBL","TMC2209","TOFF","UARTAddress","UartError","VACTUAL","VERSION","VSENSE","as_exponent_of_2","as_max_resolution_microsteps_count","as_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","disable","disable_analog_scale_current","disable_automatic_current_scaling","disable_automatic_gradient_adaptation","disable_microstep_interpolation","disable_stealth_chop","drv_err","en_SpreadCycle","enable","enable_analog_scale_current","enable_automatic_current_scaling","enable_automatic_gradient_adaptation","enable_microstep_interpolation","enable_stealth_chop","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ms_pins_state","get_microsteps_per_step","index_otpw","index_step","internal_Rsense","into","into","into","into","into","into","into","into","into","into","into","into","mstep_reg_select","multistep_filt","new_using_uart","partial_cmp","pdn_disable","read_pin_state","reset","set_current_scaling","set_microsteps_per_step","shaft","test_mode","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uv_cp","T0","Thermistor","borrow","borrow_mut","from","into","new","read_temperature","try_from","try_into","type_id","CantDeleteFile","CantDeleteFileMetadata","CreationError","DeleteFileError","FileDoesntExist","FileSystem","InitializeChip","MetadatasRegion","bad_blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_file","delete_file","does_file_exist","fmt","from","from","from","get_existing_files_metadatas","into","into","into","new","read_file","regions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BadBlockTable","BadBlockTableBytes","as_bytes","borrow","borrow","borrow_mut","borrow_mut","default","from","from","from_bytes","from_first_powerup","indices","into","into","into_iter","is_block_valid","mark_block_as_invalid","next","try_from","try_from","try_into","try_into","type_id","type_id","RegionsConfig","borrow","borrow_mut","data","data_address_range","data_block_range","default","from","into","metadata","metadata_address_range","metadata_block_range","try_from","try_into","type_id","DoesntExistAnymore","DoesntExistAnymore","DoesntExistAnymore","EndOfFile","FileReader","FileWriter","FilesRegion","InvalidUtf8String","ReadError","ReadNameError","Spi","Spi","Spi","WriteError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_file","delete_file","drop","finish_writing","fmt","fmt","fmt","from","from","from","from","from","from","has_reached_end_of_file","into","into","into","into","into","into","open_file_for_read","read_data","read_name","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_data","FIRST","FileDoesntExist","FileId","FileMetadata","FileMetadataValidator","FilesMetadatasRegion","NotEnoughSpaceAvailable","WRITING_FILE","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compact","create_file","delete_file","does_file_exist","end_memory_address","eq","eq","eq","file_data_length","file_name_length","finish_writing_file","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","get_file_metadata","get_file_validator","get_files_metadatas","id","into","into","into","into","into","into","next","partial_cmp","read_from_flash","start_memory_address","start_writing_file","store_in_flash","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate","AsAny","Error","Finished","GCodeCommand","Status","Working","as_any","borrow","borrow_mut","clone","clone_into","commands","eq","execute","execute","fmt","from","into","parameters","parser","prepare","to_owned","try_from","try_into","type_id","G0","G1","G20","G21","G28","G60","G61","G90","G91","G92","M104","M106","M107","M109","M140","M190","M82","M83","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","axes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","e","e","e","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fan_index","fan_index","fan_speed","feed_rate","feed_rate","feed_rate","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_move_ready_to_go","is_move_ready_to_go","move_id","move_id","prepare","prepare","prepare","prepare","prepare","prepare","prepare","prepare","slot","slot","target_temperature","target_temperature","target_temperature_cooling_and_heating","target_temperature_cooling_and_heating","target_temperature_heating","target_temperature_heating","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x","x","x","y","y","y","y","z","z","z","z","Absolute","ExecutingCommand","GCodeExecuter","InvalidPositionSlot","PositionMode","PreparingCommand","Relative","SAVED_POSITIONS_COUNT","TickError","add_command_to_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_position_based_on_mode","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","fmt","from","from","from","from","get_saved_position","has_command_to_execute","into","into","into","into","save_position","set_extruder_position_mode","set_position_mode","set_units","tick","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","error","error","Param","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","from","from","from","identifier","into","new","to_owned","try_from","try_into","type_id","value","AnyWithoutSpaces","E","F","GCodeParameterIdentifier","GCodeParameterIdentifierLetter","IdentifierInGroup","LETTER","P","R","S","X","Y","Z","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","is_any_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_identifier_present","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","is_this","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","GCodeParameterValue","NoValue","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","from_str","from_str","hash","into","to_owned","try_from","try_into","type_id","Command","CommandAndComment","Comment","Empty","Error","GCodeLine","GCodeParser","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","into","into","parse_line","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","adc","interrupt","pwm","timer","uart","watchdog","Adc","AdcPin","AdcPinExt","CantRead","Error","InvalidPercentage","ReadPercentageError","ReadableValue","borrow","borrow_mut","fmt","from","into","max_readable_value","read","read_percentage","try_from","try_into","type_id","AnyEdge","Error","HighLevel","InterruptPin","LowLevel","NegativeEdge","PositiveEdge","Trigger","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash","into","subscribe_to_interrupt","to_owned","try_from","try_into","type_id","Error","PwmPin","get_duty_cycle","set_duty_cycle","set_frequency","AdditionalFunctionality","Error","Error","Timer","TimerAdditionalFunctionality","duration_to_counter","enable_alarm","get_additional_functionality","get_clock_frequency","get_time","get_time_in_ticks","on_alarm","set_alarm","set_alarm_in_ticks","ticks_to_duration","Error","Uart","flush_read","read","write","Error","Watchdog","Watchdog","WatchdogCreator","feed","watch_current_thread","MockAdc","MockAdcPin","MockAdcReading","MockError","MockHeaders","MockHttpConnection","MockHttpServer","MockInputPin","MockOta","MockOtaUpdate","MockOtaUpdateFinished","MockOutputPin","MockPeripherals","MockPwmPin","MockSpi","MockSystemTime","MockTimer","MockTimerAdditionalFunctionality","MockUart","MockWatchdog","MockWatchdogCreator","MockWifiDriver","MockZAxisProbe","abort","activate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","complete","connect","delay","disconnect","div","enable_alarm","factory_reset","feed","finish","finish_homing","flush","flush","flush_read","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_additional_functionality","get_boot_slot","get_capabilities","get_clock_frequency","get_configuration","get_duty_cycle","get_ip_address_from_wifi_driver_function","get_running_slot","get_time","get_time_in_ticks","get_update_slot","header","header","initiate_response","initiate_update","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_connected","is_end_reached","is_factory_reset_supported","is_high","is_low","is_response_initiated","is_started","kind","kind","kind","mark_running_slot_invalid_and_reboot","mark_running_slot_valid","max_readable_value","method","method","now","on_alarm","on_end_reached","prepare_for_homing","raw_connection","read","read","read","read_percentage","reboot_fn","register_request","scan","scan_n","set_alarm","set_alarm_in_ticks","set_configuration","set_duty_cycle","set_frequency","set_high","set_low","split","start","stop","take_adc","take_bed_cartridge_heater_pin","take_bed_thermistor_pin","take_extruder_motor_dir_pin","take_extruder_motor_step_pin","take_flash_chip","take_flash_spi","take_hotend_cartridge_heater_pin","take_hotend_fan_pin","take_hotend_thermistor_pin","take_http_server","take_kinematics","take_layer_fan_pin","take_left_motor_dir_pin","take_left_motor_step_pin","take_ota","take_right_motor_dir_pin","take_right_motor_step_pin","take_stepper_ticker_timer","take_system_time","take_uart_driver","take_watchdog_creator","take_wifi_driver","take_x_axis_endstop","take_y_axis_endstop","take_z_axis_endstop","take_z_axis_motor_dir_pin","take_z_axis_motor_step_pin","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","uri","watch_current_thread","write","write","write","CreateExtruderTMC2209","CreateLeftTMC2209","CreateRightTMC2209","CreateStepperTickerTimer","CreateZAxisTMC2209","CreationConfig","CreationError","CreationParameters","EnableStepperTickerTimer","MotionController","MotorConfig","N_MOTORS","RotationToLinearMotion","SetPausedError","TryingToPause","TryingToResume","axes","bed_leveling","bed_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","distance_to_microsteps","extruder_motor","extruder_motor","fmt","fmt","from","from","from","from","from","from","from","get_current_position_esteem","get_last_planned_move_end_position","get_tmc2209_driver","has_move_been_executed","homing","into","into","into","into","into","into","into","kinematics","kinematics","left_motor","left_motor","mark_last_move_as_ready_to_go","microsteps_to_distance","new","new","new_connected_to_belt_driven","new_connected_to_lead_screw","offset_from_nozzle_of_z_probe","plan_move","planner","planner_blocks_count","planner_settings","right_motor","right_motor","rotation_to_linear_motion","set_paused","set_position","start_bed_leveling","start_homing","tick","ticker","ticker_timer","tmc2209_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x_endstop","y_endstop","z_axis_motor","z_axis_motor","z_endstop","Axis","E","X","Y","Z","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash","into","to_owned","try_from","try_into","type_id","Done","HomingError","IsEndReachedError","None","OnEndReachedError","Probe","UnifiedBedLeveling","UnifiedBedLevelingProcedure","Working","ZAxisProbe","apply_to_kinematics_if_possible","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","finish_homing","finish_homing","finish_procedure","from","from","from","get_offset_from_nozzle","index_to_xy","into","into","into","is_end_reached","is_end_reached","new","new","on_end_reached","on_end_reached","prepare_for_homing","prepare_for_homing","set_point_correction","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CenteringForZAxis","Doing","HomingMove","HomingProcedure","HomingX","HomingY","HomingZ","None","PreparingZAxisToProbe","TickError","X","Y","Z","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","endstop","eq","eq","eq","fmt","from","from","from","into","into","into","is_homing","start_homing","tick","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","bed_size","Endstop","HomingError","IsEndReachedError","ManualEndstop","OnEndReachedError","borrow","borrow_mut","default","finish_homing","from","into","is_end_reached","is_end_reached","new","on_end_reached","on_end_reached","prepare_for_homing","remove_trigger","trigger","try_from","try_into","type_id","CartesianKinematics","CoreXYKinematics","Kinematics","ab_displacement_to_x","ab_displacement_to_x","ab_displacement_to_x","ab_displacement_to_y","ab_displacement_to_y","ab_displacement_to_y","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","xy_displacement_to_a","xy_displacement_to_a","xy_displacement_to_a","xy_displacement_to_b","xy_displacement_to_b","xy_displacement_to_b","BedLeveling","Block","BlocksBufferIsFull","Flag","Homing","MoveId","NominalLength","Planner","Recalculate","Settings","StepsPerSecond","accelerate_until","acceleration","acceleration_rate","acceleration_steps_per_sec2","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","communicate_to_ticker","decelerate_after","default","default","deserialize","entry_speed_sqr","enum_from_u32","enum_into_u32","eq","eq","eq","final_speed","flags","fmt","fmt","fmt","from","from","from","from","from","from","get_position","get_settings_mut","has_any_move_planned","has_any_move_with_set_flags_planned","has_move_been_executed","initial_speed","into","into","into","into","into","into","is_null","mark_last_added_move_as_ready_to_go","max_acceleration_mm_per_s2","max_entry_speed_sqr","max_feedrate_mm_s","millimeters","min_feedrate_mm_s","min_travel_feedrate_mm_s","new","nominal_speed","nominal_speed_in_mm_sec","not","partial_cmp","plan_move","print_acceleration","retract_acceleration","serialize","set_flags_on_last_added_block","set_position","step_event_count","steps","sub","tick","to_owned","to_owned","travel_acceleration","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Communication","KinematicsFunctions","ab_to_x","ab_to_y","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current_motion_profile_block","finish_using_current_block","from","from","get_blocks","into","into","is_block_available","is_homing_block_available","kinematics_functions","log","logs","print_logs","print_logs_from_isr","set_kinematics_functions","store_blocks_if_necessary","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CreationError","EnableAlarm","EnableError","OnAlarm","OnEndstopTriggered","SetAlarm","StepperMotorsTicker","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","disable","enable","fmt","fmt","from","from","from","get_tick_frequency","get_time","into","into","into","new","start_homing","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","is_paused","resume","toggle_pause","CouldntOpenFileForRead","CouldntParseLine","FileContainsInvalidUtf8","LineToExecuteParsed","PrintProcess","PrintProcessError","PrintProcessOk","SPIError","add_commands_in_buffer_count","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","comment","fmt","from","from","from","from","get_commands_in_buffer_count","get_file_being_printed","get_print_estimated_duration_in_seconds","get_print_start_time","into","into","into","into","new","parse_line_to_execute","print_file","read_commands","read_lines","remove_commands_in_buffer_count","tick","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CantReadTemperature","PID_CONTROL_MAX_LIMIT","PID_CONTROL_MIN_LIMIT","PidUpdateError","ReadTemperatureIsWrong","SetCartridgeHeaterPercentage","TemperaturePidController","TemperaturePidGains","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","d","eq","eq","fmt","fmt","from","from","from","get_current_temperature","get_last_sample_of_current_temperature","get_pid_gains","get_target_temperature","hash","i","into","into","into","new","p","safety","set_pid_gains","set_target_temperature","tick","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CantKeepTargetTemperature","CantRiseFastEnoughToTargetTemperature","CurrentTemperatureOutsideAllowedRange","TargetTemperatureOutsideAllowedRange","TemperatureError","TemperatureSafety","allowed_range","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","enum_from_u32","enum_into_u32","eq","eq","fmt","from","from","hash","into","into","is_temperature_safe","new","not","serialize","sub","temperature_change","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AllowedTemperatureRangeSafety","borrow","borrow_mut","from","into","is_temperature_safe","new","try_from","try_into","type_id","ProtectionModeTrait","TemperatureChangeConfig","TemperatureChangeSafety","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","hysteresis","into","into","is_temperature_safe","modes","new","period_in_seconds","should_continue_timer","should_start_timer","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","KeepMode","RisingMode","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","new","should_continue_timer","should_continue_timer","should_start_timer","should_start_timer","try_from","try_from","try_into","try_into","type_id","type_id","Clock","SystemTime","borrow","borrow_mut","delay","delay","fmt","from","get_delta_time","get_elapsed_time","into","new","now","tick","try_from","try_into","type_id","PanicHandler","borrow","borrow_mut","from","into","try_from","try_into","type_id","bresenham","log_in_isr","math","measurement","mutex","slice_to_array","Bresenham","borrow","borrow_mut","fmt","from","get_longest_index","into","into_iter","len","new","next","try_from","try_into","type_id","print_logs_from_isr","FULL","NumberExt","Percentage","ZERO","borrow","borrow_mut","ceil_div","clone","clone_into","constrain","default","eq","fmt","fmt","from","from_0_to_1","from_0_to_100","into","into_0_to_1","into_0_to_100","lerp","map","partial_cmp","sqr","to_owned","to_string","try_from","try_into","type_id","vectors","Vector2","Vector3","VectorN","ZERO","add","borrow","borrow_mut","clone","clone_into","default","dot","eq","fmt","from","from_xy","from_xy","from_xyz","from_xyz","index","index_mut","into","length_millimeters","length_millimeters_sqr","mul","mul_assign","neg","new","normalized","sub","to_owned","try_from","try_into","type_id","x","x","x","x","y","y","y","y","z","z","angle","distance","duration","frequency","temperature","Angle","AngleDouble","AngleFunctions","AngleGeneric","EPSILON","EPSILON_ANGLE","EpsilonAngle","FLAT","FLAT_ANGLE","INVALID","INVALID_ANGLE","RIGHT","RIGHT_ANGLE","ROUND","ROUND_ANGLE","ZERO","ZERO_ANGLE","abs","acos","acos","acosh","acosh","add","add_assign","asin","asin","asinh","asinh","atan","atan","atan2","atan2","atanh","atanh","borrow","borrow_mut","clamp","clone","clone_into","cos","cos","cosh","cosh","cycles_count","cycles_count","default","deg","div","div_assign","eq","fmt","fmt","from","from_degrees","from_radians","into","into_degrees","into_radians","is_invalid","is_invalid","max","min","mul","mul_assign","mul_by_constant","neg","partial_cmp","rad","sin","sin","sin_cos","sin_cos","sinh","sinh","sub","sub_assign","tan","tan","tanh","tanh","to_degrees","to_owned","to_radians","to_string","try_from","try_into","type_id","wrap_180","wrap_180","wrap_360","wrap_360","CENTIMETER","Distance","INCH","Inches","MICROMETER","MILLIMETER","Millimeters","TENS_OF_NANOMETERS","Units","ZERO","add","add_assign","as_centimeters","as_meters","as_micrometers","as_millimeters","as_millimeters_f32","as_tens_of_nanometers","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_distance","default","default","div","div","eq","eq","fmt","fmt","from","from","from_centimeters","from_inches","from_micrometers","from_millimeters","from_str","from_tens_of_nanometers","hash","into","into","mul","mul","mul_assign","neg","partial_cmp","sub","sub_assign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MAX_VALUE","MICRO_SECOND","MILLI_SECOND","SECOND","SmallDuration","ZERO","add","add_assign","as_micros","as_millis","as_millis_f32","as_nanos","as_seconds","as_seconds_f32","as_tens_of_nanos","borrow","borrow_mut","clone","clone_into","cmp","div","div_assign","eq","fmt","from","from","from_micros","from_millis","from_seconds","from_seconds_f32","from_tens_of_nanos","hash","into","mul","mul_assign","partial_cmp","sub","sub_assign","to_owned","try_from","try_into","type_id","Frequency","as_hertz","borrow","borrow_mut","clone","clone_into","cmp","div","eq","fmt","from","from","from_hertz","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","Temperature","ZERO_CELSIUS_IN_KELVIN","add","as_celsius","as_kelvin","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","from_celsius","from_kelvin","into","partial_cmp","sub","to_owned","try_from","try_into","type_id","Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","drop","from","from","into","into","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"firmware_core"],[3,"firmware_core::printer"],[38,"firmware_core::printer::communication"],[144,"firmware_core::printer::communication::CreationError"],[145,"firmware_core::printer::communication::SendablePeripherals"],[175,"firmware_core::printer::communication::communicator"],[180,"firmware_core::printer::communication::communicator::wifi"],[215,"firmware_core::printer::communication::http"],[219,"firmware_core::printer::communication::http::command"],[248,"firmware_core::printer::communication::http::other"],[260,"firmware_core::printer::communication::http::other::printer_state"],[274,"firmware_core::printer::communication::http::request"],[320,"firmware_core::printer::communication::http::resources"],[350,"firmware_core::printer::communication::ota"],[384,"firmware_core::printer::communication::security"],[449,"firmware_core::printer::communication::security::PasswordConfiguration"],[454,"firmware_core::printer::components"],[569,"firmware_core::printer::components::CreationError"],[570,"firmware_core::printer::components::config"],[584,"firmware_core::printer::components::config::temperature"],[618,"firmware_core::printer::components::drivers"],[626,"firmware_core::printer::components::drivers::bl_touch"],[661,"firmware_core::printer::components::drivers::button"],[677,"firmware_core::printer::components::drivers::cartridge_heater"],[687,"firmware_core::printer::components::drivers::fan"],[697,"firmware_core::printer::components::drivers::servo_motor"],[728,"firmware_core::printer::components::drivers::spi_flash_memory"],[820,"firmware_core::printer::components::drivers::stepper_motor"],[850,"firmware_core::printer::components::drivers::stepper_motor::tmc2209"],[1045,"firmware_core::printer::components::drivers::thermistor"],[1056,"firmware_core::printer::components::file_system"],[1094,"firmware_core::printer::components::file_system::bad_blocks"],[1119,"firmware_core::printer::components::file_system::regions"],[1134,"firmware_core::printer::components::file_system::regions::data"],[1202,"firmware_core::printer::components::file_system::regions::metadata"],[1291,"firmware_core::printer::components::g_code"],[1316,"firmware_core::printer::components::g_code::commands"],[1641,"firmware_core::printer::components::g_code::execute"],[1700,"firmware_core::printer::components::g_code::execute::TickError"],[1702,"firmware_core::printer::components::g_code::parameters"],[1722,"firmware_core::printer::components::g_code::parameters::identifier"],[1882,"firmware_core::printer::components::g_code::parameters::value"],[1900,"firmware_core::printer::components::g_code::parser"],[1927,"firmware_core::printer::components::hal"],[1933,"firmware_core::printer::components::hal::adc"],[1952,"firmware_core::printer::components::hal::interrupt"],[1974,"firmware_core::printer::components::hal::pwm"],[1979,"firmware_core::printer::components::hal::timer"],[1994,"firmware_core::printer::components::hal::uart"],[1999,"firmware_core::printer::components::hal::watchdog"],[2005,"firmware_core::printer::components::mock"],[2294,"firmware_core::printer::components::motion"],[2403,"firmware_core::printer::components::motion::axes"],[2421,"firmware_core::printer::components::motion::bed_leveling"],[2469,"firmware_core::printer::components::motion::homing"],[2520,"firmware_core::printer::components::motion::homing::HomingMove"],[2521,"firmware_core::printer::components::motion::homing::endstop"],[2543,"firmware_core::printer::components::motion::kinematics"],[2582,"firmware_core::printer::components::motion::planner"],[2695,"firmware_core::printer::components::motion::planner::communicate_to_ticker"],[2728,"firmware_core::printer::components::motion::ticker"],[2764,"firmware_core::printer::components::pauser"],[2767,"firmware_core::printer::components::print_process"],[2818,"firmware_core::printer::components::temperature"],[2870,"firmware_core::printer::components::temperature::safety"],[2910,"firmware_core::printer::components::temperature::safety::allowed_range"],[2920,"firmware_core::printer::components::temperature::safety::temperature_change"],[2948,"firmware_core::printer::components::temperature::safety::temperature_change::modes"],[2970,"firmware_core::printer::components::time"],[2987,"firmware_core::printer::panic_handler"],[2995,"firmware_core::utils"],[3001,"firmware_core::utils::bresenham"],[3015,"firmware_core::utils::log_in_isr"],[3016,"firmware_core::utils::math"],[3046,"firmware_core::utils::math::vectors"],[3089,"firmware_core::utils::measurement"],[3094,"firmware_core::utils::measurement::angle"],[3185,"firmware_core::utils::measurement::distance"],[3247,"firmware_core::utils::measurement::duration"],[3289,"firmware_core::utils::measurement::frequency"],[3309,"firmware_core::utils::measurement::temperature"],[3331,"firmware_core::utils::mutex"],[3353,"core::fmt"],[3354,"core::fmt"],[3355,"core::any"],[3356,"embedded_svc::wifi::asynch"],[3357,"embedded_hal::spi"],[3358,"std::thread"],[3359,"std::io::error"],[3360,"core::option"],[3361,"core::ops::function"],[3362,"alloc::boxed"],[3363,"std::sync::mpsc"],[3364,"std::sync::mpsc"],[3365,"serde::ser"],[3366,"embedded_svc::http"],[3367,"embedded_svc::ota"],[3368,"embedded_svc::http::server"],[3369,"embedded_svc::http::server"],[3370,"core::hash"],[3371,"embedded_hal::digital"],[3372,"core::ops::function"],[3373,"core::ops::range"],[3374,"embedded_hal::digital"],[3375,"core::any"],[3376,"core::cmp"],[3377,"embedded_svc::ota"],[3378,"enumset::set"],[3379,"embedded_svc::wifi"],[3380,"embedded_svc::wifi"],[3381,"heapless::vec"],[3382,"embedded_hal::spi"],[3383,"log"],[3384,"core::marker"],[3385,"core::ops::arith"],[3386,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","This module contains everything related to making the 3D …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","A peripheral from the provided ones is missing (<code>name</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Starts a new thread, creating a new instance of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executes all the <code>commands</code> received from the communication …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type that implements this trait can be used to make the …","","Make the Communicator register the handle all the possible …","Make the Communicator register the handle of the provided …","","A problem occurred when calling <code>Wifi::connect</code>.","Configuration required to create a <code>WifiCommunicator</code>.","An error returned from <code>WifiCommunicator::new</code>.","","","A problem occurred when calling <code>Wifi::set_configuration</code>.","A problem occurred when calling <code>Wifi::start</code>.","A way to communicate with the external world using WiFi.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Setup the provided <code>wifi</code> to work as a client based on the …","","","","","","","","","","","","Configuration of the WiFi client.","This module contains functionalities used to make the …","","","","","A command sent from the <code>Communication</code> thread to the …","List of <code>commands</code> received from the <code>communication thread</code> …","The communication thread can send <code>commands</code> to the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator that will consume all the commands …","Returns a <code>CommandsSender</code> and a <code>CommandsReceiver</code> linked …","Send the provided <code>command</code> to the linked <code>CommandsReceiver</code>.","","","","","","","","","","This struct keeps track of the G-code commands executed by …","Add the provided <code>lines</code> to the history of commands. You can …","","","Returns the argument unchanged.","Returns a string containing the <code>lines</code> you provided to …","Calls <code>U::from(self)</code>.","Returns an empty <code>GCodeHistory</code>.","","","","","A “screenshot” of the state of some components of the …","","","","","Returns the argument unchanged.","Returns the static <code>PrinterState</code> instance that contains the …","Calls <code>U::from(self)</code>.","","Updates the “screenshot” of the state of some …","","","","","Delete a specific file from the file system.","Get the status of the current print (if a print is in …","A possible request that the HTTP server in this firmware …","An iterator over the variants of HttpRequest","List the metadatas of all the G-code files saved in the …","Provide the history of G-code commands that have been read …","Moves the tool of the machine by the specified amount on …","Over-The-Air update.","Pause or resume (based on the previous state) the current …","Start printing a specific file.","Get the status of various components of the machine (like …","","Send a G-code file to the printer (that later on could be …","“Manually” add the provided G-code commands to the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a pointer to the function that should be called …","Returns the HTTP method that the request received by the …","Returns the relative URI that the request received by the …","Returns the number of possible URI the HTTP server of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A container of resources that can be used by the <code>callbacks</code> …","Check <code>Resources</code>.","","","","","Makes a clone of the <code>Arc</code> pointer.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Blocks the thread until the mutex is unlocked and returns …","Wraps the provided resources in an <code>Arc&lt;Mutex&gt;&gt;</code> and returns …","","","","","","","","","","Try to get the internal resources, returning <code>None</code> if they …","","","","A firmware update <code>started</code> by the <code>OverTheAirUpdater</code>.","","Makes <code>OTA updates</code> possible for this firmware.","","States to the firmware that the OTA update you started …","","","","","","","States to the firmware that the OTA update you started …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Starts an <code>OverTheAirUpdate</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if you <code>initiated an update</code> before and it has …","Returns a new handler for OTA updates that can reboot the …","Reboots the microcontroller. It may be useful after an OTA …","","","","","","","","","","Writes a new portion of data to the OTA partition. After …","","","","","","","","","","","","A type that implements this trait is a layer of security …","Input data required by <code>Protection</code> to check if the request …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","An error that can occur when you instatiate a …","","","","","","","","","","","","","","","","","","","","A peripheral from the provided ones is missing (<code>name</code> is …","","","","","","","","","An error that can occur when you tick a <code>Printer3DComponents</code>…","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<strong>G-code</strong> is the language understood by 3D printers, and it’…","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","This module gives the ability to the printer to pause a …","Check <code>PrintProcess</code>.","Returns a function pointer that reboots the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Eventually exits from <code>alarm mode</code> and <code>pulls pin up</code>.","Eventually exits from <code>alarm mode</code> and enters touch switch …","A <code>BLTouch</code> sensor.","A command <code>executable</code> by the BLTouch sensor.","Push pin down.","","","Do self test (pushes pin down and up a couple of times).","Pull pin up.","","","","","","","","<code>Pulls pin up</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Equivalent to <code>BLTouch::on_touch</code>.","Calls the provided <code>callback</code> when the BLTouch touches …","<code>Pushes pin down</code> and goes in <code>touch switch mode</code>.","Makes the BLTouch sensor execute the provided <code>command</code>.","","","","","","","","A button connected to the microcontroller that can read if …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Returns <code>Ok(true)</code> if the button is pressed, <code>Ok(false)</code> if it …","Returns a <code>Button</code> that can read its state on the provided …","Equivalent to <code>Button::on_pressed</code>, even for safety rules.","Call the provided <code>callback</code> function when the button is …","","","","","A cartridge heater connected to the microcontroller that …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a <code>CartridgeHeater</code> that can control its heat …","Sets the <code>percentage</code> of current to give to the heater.","","","","A fan connected to the microcontroller that can be …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a <code>Fan</code> that can control its speed through the …","Sets the speed percentage at which the fan rotates.","","","","The neutral angle a <code>ServoMotor</code> holds (<code>90°</code>).","The <code>50Hz</code> value usually used by servo motors.","A <code>servo motor</code> connected to the microcontroller that can be …","Position held by a <code>ServoMotor</code>.","Returns the <code>Angle</code> this <code>ServoPosition</code> represents.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>ServoPosition</code> representing the provided <code>angle</code>.","Creates a <code>ServoPosition</code> that has the provided …","Gets the <code>target position</code> you previously <code>set</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sends a command to the servo motor to move to the provided …","Creates a <code>ServoMotor</code> that receives commands on the …","","","","","","","","","Number of blocks contained in a plane of the chip.","Size of the data area of a block.","Size of the data area of a block.","","Both the <code>Manufacturer ID</code> and the <code>Device ID</code> read from the …","","It has been impossible to communicate via SPI and so no …","","Only the <code>Device ID</code> read from the SPI device doesn’t …","","The register of a feature in the <code>MT29F2G01ABAGDWB</code> chip.","A type that represents a <code>flash memory chip</code>.","Extra functionality provided automatically to every type …","Number of LUNs contained in the chip.","Size of the data area of a LUN.","Size of the data area of a LUN.","","Max supported frequency of the SPI clock.","Size of the data area of the chip.","Size of the data area of the chip.","2Gbit 3.3V NAND SPI flash memory chip (datasheet).","Only the <code>Manufacturer ID</code> read from the SPI device doesn’…","Number of pages contained in a block of the chip.","Size of the ECC area of a page.","Size of the data area of a page.","Number of planes contained in a LUN of the chip.","Size of the data area of a plane.","Size of the data area of a plane.","Preferred <code>SPI mode</code>.","A flash memory connected to the microcontroller through a …","","An error returned from <code>SpiFlashMemory::validate_id</code>.","Returns the address of the register.","","","","","","","","","","","","","Check if the block at the provided <code>block_index</code> in the …","","","","Erases all the blocks in the provided …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the memory address of the first byte of the first …","Returns the memory address of the first byte of the first …","Returns the index of the block that contains the provided …","Returns the index of the block that contains the provided …","Returns a mutable reference to the underlying chip.","Returns the value stored in the provided <code>features</code> register …","","","","Moves the bytes in the <code>from</code> address range to the address …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Program the provided <code>data</code> in the flash memory starting …","Reads [<code>data.len()</code>] bytes from the data areas of the pages …","Reads [<code>data.len()</code>] bytes from the ECC area of the page …","Puts the flash memory in a known condition.","Sets the value stored in the provided <code>features</code> register of …","","","","","","","","","","","","","","","Validate that the IDs (<code>ManufacturerID</code> and <code>DeviceID</code>) of the …","Counter-clockwise","Clockwise","Direction of rotation.","A <code>stepper motor</code> connected to a <code>stepper driver</code> (like the …","","","","","","","Check <code>struct&#39;s documentation</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>RotationalDirection::CW</code> if the provided <code>value</code> has …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>StepperMotor</code> that can be controlled with the …","Returns <code>RotationalDirection::CW</code> if <code>self</code> is …","Set the direction in which the step will be taken when you …","Check <code>struct&#39;s documentation</code>.","","","","","","","","","","","","","","","","","","","","","<code>1</code> microstep corresponds to a step.","","","","","","","","","","","","","<code>128</code> microsteps correspond to a step.","<code>16</code> microsteps correspond to a step.","<code>2</code> microsteps correspond to a step.","<code>256</code> microsteps correspond to a step.","<code>32</code> microsteps correspond to a step.","<code>4</code> microsteps correspond to a step.","<code>64</code> microsteps correspond to a step.","<code>8</code> microsteps correspond to a step.","Maximum microstep resolution achievable by the TMC2209 …","","","","Amount of <code>microsteps</code> the motor will require to do a full …","","","","","","","","","","","Error that occurred while trying to read a register of the …","","","","","","","","","","A driver to communicate with the <code>TMC2209</code> chip (to control …","","Serial address of a <code>TMC2209</code> chip.","","","","","","Returns the number of microsteps with the highest …","Returns the number of microsteps per step this instance …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disable the TMC2209 via software (UART).","Blocking","Disable automatic current control.","Stops the automatic adjustment of the PWM gradient value …","Disable the microstep interpolation. Check …","Disable <code>StealthChop</code> on the driver, enabling <code>SpreadCycle</code>.","","","Enable the TMC2209 via software (UART).","Blocking","Enable automatic current control.","Makes the TMC2209 chip automatically adjust the PWM …","The TMC2209 chip will extrapolate the microsteps per step …","Enable <code>StealthChop</code> on the driver, disabling <code>SpreadCycle</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>UARTAddress</code> from the state of the <code>MS1</code> and <code>MS2</code> …","Get the value you previously set using …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a <code>TMC2209</code> driver that is connected controlled by …","","","Read the state of a physical pin of the TMC2209 chip using …","","Scales the current going to the motors.","Sets the amount of <code>microsteps</code> the motor will take for each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>25°C</code> temperature.","A thermistor …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a <code>Thermistor</code> that is connected to the …","Reads the current <code>Temperature</code> from the thermistor.","","","","It has been impossible to erase the data portion of the …","It has been impossible to erase the metadata portion of …","An error returned from <code>FileSystem::new</code>.","An error returned from <code>FileSystem::delete_file</code>.","The file you tried to delete doesn’t exist in the file …","","","","","","","","","","","Creates a file with the name <code>file_name</code> and whose data will …","Tries to delete the file with the provided <code>file_id</code> from …","Returns <code>true</code> if you <code>created</code> a file before that had the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a slice of all the metadatas of all the files you …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Opens the file with the provided <code>file_id</code> so that you can …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Restores the bad block table from a previous one you …","Creates a bad block table from the first power up of the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Configuration data of the regions of the <code>FileSystem</code>.","","","","Returns the memory address range used by the <code>FilesRegion</code>.","The range of the indices of the flash memory’s blocks …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns the memory address range used by the …","The range of the indices of the flash memory’s blocks …","","","","The file has been deleted from the file system.","","","All the content of the file has been read and there’s …","","","There are 2 assumptions used in all the methods of this …","","","","An error during the communication with the flash memory …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>true</code> if you have <code>read</code> all the data present in the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Reads <code>data.len()</code> bytes from the file at the current …","Reads the <code>file_name</code> you provided to <code>FileSystem::create_file</code>…","","","","","","","","","","","","","","","","","","","","<code>FileId</code> of the first file ever created in the file system.","","Unique identifier of a file for a 3D printer. 2 files on …","","","","","<code>FileId</code> of a file that is currently being written. A newly …","","","","","","","","","","","","","","","","","","","Collect all the fragmented data holes present in the …","Finds a space large enough to store <code>data_size</code> bytes …","Removes the file with the specified <code>file_id</code> from the …","Returns <code>true</code> if a file with the specified <code>file_id</code> is …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Examples","If a file with the specified <code>file_id</code> is stored in this …","Returns the current file validator.","Returns a reference to the metadatas of all the files …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads the metadatas region you previously <code>stored</code> from the …","","","Stores this region in the provided <code>spi_flash_memory</code> at the …","","","","","","","","","","","","","","","","","","","","","","","","","This trait is only used for testing purposes, and it’s …","There has been an error in the execution of the command.","The command has finished processing successfully.","","Status of execution (or preparation) of a <code>G-code command</code>.","The command still needs to be processed.","","","","","","A list of all the G-code commands supported by this …","","","This method is called when the G-code command becomes the …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","<code>G-code commands</code> can have 0, 1, or more parameters. Each …","This module contains utilities to convert strings (which …","This method is called as soon as the G-code command is …","","","","","","","","","","TODO: Find a way to get the current position (because now …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calling <code>GCodeCommand::execute</code> resulted in the <code>Status::Error</code>…","","","","Calling <code>GCodeCommand::prepare</code> resulted in the <code>Status::Error</code>…","","Number of savable positions in <code>GCodeExecuter</code> (check …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the position you provided to <code>Self::save_position</code> at …","Returns <code>true</code> if it is currently executing a command or it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Save the provided <code>position</code> at the specified <code>slot</code>, so that …","","","","","","","","","","","","","","","","","","","","","A parameter of a G-code command.","","","","","","","","","","Returns the argument unchanged.","","A list of all the identifiers in the parameters of a …","Calls <code>U::from(self)</code>.","","","","","","A list of all the values in the parameters of a command …","A list of identifiers that could be present in the string …","Letter <code>E</code>.","Letter <code>F</code>.","An identifier supported by this firmware.","A <code>GCodeParameterIdentifier</code> which is a single letter (like <code>X</code>…","Used by <code>AnyWithoutSpaces</code>.","","Letter <code>P</code>.","Letter <code>R</code>.","Letter <code>S</code>.","Letter <code>X</code>.","Letter <code>Y</code>.","Letter <code>Z</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if any of the identifiers in contained in the …","","","","","","","","","","Returns <code>true</code> if the identifier of type <code>I</code> is present in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type of value of a parameter supported by this firmware.","A parameter without a value. This may be useful if you …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","A line that contains only a command.","A line that contains both a command and a comment.","A line that contains only a comment.","An empty line.","It may either be that the line contains a command that isn…","This enum is the result of parsing a line using <code>GCodeParser</code>…","Check the <code>module&#39;s</code> documentation.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a single line of G-code and returns the result.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Safety","","","","","","","","","","","","","A timer that can be used to get the current time it is …","Check <code>Timer::get_additional_functionality</code>.","","Enable or disable the timer based on the provided <code>enable</code> …","Returns a <code>Self::AdditionalFunctionality</code> instance that can …","Returns the frequency at which the clock of the timer is …","Get the current time kept by the timer.","","Calls the provided <code>callback</code> every time the alarm time set …","Calls the <code>callback</code> you provided to <code>Timer::on_alarm</code> when …","","","","A type that can be used to communicate using the …","Discards all the bytes in the read buffer.","Try to read <code>buf.len()</code> bytes from the interface and write …","Try to write <code>buf</code> in the interface.","","A type that can restarts the <code>watchdog timer</code> in the …","","A type that can instantiate a <code>Watchdog</code> on the current …","Check the <code>trait&#39;s</code> documentation.","Check the <code>trait&#39;s</code> documentation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error that can occur when you instatiate a …","Data necessary to create a <code>MotionController</code>.","","Controls all the stuff (moves, homing, bed levelling..) …","Data necessary to configure a stepper motor.","Number of stepper motors controlled by the machine.","An helper struct used to calculate the distance taken by …","An error that can occur when you <code>pause or resume</code> a …","","","Helpers to deal with the axes of the machine.","","","","","","","","","","","","","","","","","Returns the <code>microsteps</code> count the motor would need to take …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the position of the last <code>planned move</code> if there has …","Returns a mutable reference to the <code>TMC2209</code> driver you …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Make the last <code>planned move</code> ready to be executed.","Returns the <code>Distance</code> the object would be moved if you …","Returns a <code>RotationToLinearMotion</code> that converts a full …","","Returns a <code>RotationToLinearMotion</code> from a belt driven …","Returns a <code>RotationToLinearMotion</code> from a lead screw …","","Make the tool move to the provided coordinates after the …","Translates movements (for example a <code>10mm</code> move in the <code>X</code> …","","","","","","","","","Make the machine start the <code>HomingProcedure</code> after all the …","This method internally ticks the <code>HomingProcedure</code> and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents an axis of the machine.","<code>Extruder</code> axis.","<code>X</code> axis.","<code>Y</code> axis.","<code>Z</code> axis.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A probe used on the Z axis to home/do bed levelling with …","Grid","","","","","","","","","","","","The probe finished homing.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>offset_from_nozzle</code> you passed to …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Safety","","Prepare the probe for homing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Starts the homing procedure, by first homing the X axis.","","","","","","","","","","","","","","","Type that can be used as an <code>endstop</code>.","","","A “fake” <code>Endstop</code> that is not physically present in the …","","","","","The endstop finished homing. Some types of endstop may not …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the endstop is currently triggered or not.","","Returns a <code>ManualEndstop</code> without any callback registered.","Execute the provided <code>callback</code> when the endstop is …","Safety","Prepare the endstop for homing. Some types of endstop may …","Sets the value returned by <code>Self::is_end_reached</code> to <code>false</code>.","Sets the value returned by <code>Self::is_end_reached</code> to <code>true</code>.","","","","“Cartesian” kinematics.","CoreXY kinematics.","Type that represents the kinematics of the machine (i.e. …","Converts a displacement done by the <code>a</code> and <code>b</code> motors to a …","","","Converts a displacement done by the <code>a</code> and <code>b</code> motors to a …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Converts a displacement on the XY coordinate system to the …","","","Converts a displacement on the XY coordinate system to the …","","","A bed leveling move.","Result of a planned move. It contains all the data …","","","An homing procedure move.","","Nominal speed always reached. i.e., The segment is long …","The planning involves calculating the most optimal speed …","Recalculate trapezoids on entry junction (for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the <code>target_position</code> of the last <code>planned move</code>.","Returns a mutable reference to the <code>Settings</code> you provided …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Plans a move that will make the tool move to the …","","","","","Manually sets the current position of the planner, making …","","","","","","","","","","","","","","","","","","","","","","","","","","Data shared between the “main thread” and the ticker …","Function pointers used to convert the motion of the <code>a</code> and <code>b</code>…","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Tries to lock the internal <code>Mutex</code> and returns …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if there is either the current or the next …","Returns <code>true</code> if either the current or the next block have …","","","","","","Sets the <code>KinematicsFunctions</code> used by the …","Checks if the ticker ISR requires 1 or 2 blocks and …","","","","","","","","","","","","","","Attaches an interrupt to the timer you provide to <code>Self::new</code>…","","","","","","","Disable the inner timer, stopping this ticker from making …","Enable the inner timer so that the ticker can make the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the frequency of the inner timer. This represents the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>Err(Timer::Error)</code> if there was an error while …","This function must be called each time you start homing …","","","","","","","","","","Returns <code>false</code> if you’ve never called any function in …","Makes <code>is_paused</code> return <code>false</code>.","Makes <code>is_paused</code> return the opposite of what it would …","Check <code>FileSystem::read_file</code>.","One of the lines read from the file is a <code>GCodeLine::Error</code>.","The file contains some characters that are not <code>utf-8</code>.","","This struct controls the process of printing a file, by …","The call to <code>PrintProcess::tick</code> hasn’t been successful. …","The call to <code>PrintProcess::tick</code> has been successful, and …","Check <code>FileReader::read_data</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns <code>Some(FileId)</code> if a file is currently being printed …","Returns <code>Some(duration_in_secs)</code> if a file is currently …","Returns <code>Some(print_start_time)</code> if a file is currently …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an empty <code>PrintProcess</code>.","Returns the command and the comment present in the …","Starts printing the file with the provided <code>file_id_to_print</code>…","","","","If a file is currently <code>being printed</code>, calling this …","","","","","","","","","","","","","It has been impossible to <code>read</code> the thermistor’s …","The maximum limit output by the PID control. Take this in …","The minimum limit output by the PID control. Take this in …","An error that occurred when calling <code>tick</code> on a PID …","The thermistor’s <code>temperature</code> has been <code>read</code>, but it’s …","It has been impossible to <code>set</code> the cartridge heater’s …","A <code>PID controller</code> used to control the temperature of a …","Values of the <code>proportional</code>, <code>integral</code> and <code>derivative</code> gains …","","","","","","","","","","","<code>Derivative component</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reads the current <code>Temperature</code> of the PID controller.","Gets the <code>Temperature</code> read using …","Returns the <code>PidGains</code> previously set on this PID controller.","Returns the <code>Temperature</code> the PID controller is trying to …","","<code>Integral component</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>PidController</code> that will control the …","<code>Proportial component</code>.","","Set the PID gains of this controller. Check …","Sets the <code>Temperature</code> the PID controller will try to reach.","Make the PID controller work to try to reach its …","","","","","","","","","","","","After <code>current_temperature</code> reached the <code>target_temperature</code> …","While <code>current_temperature</code> is trying to reach the …","The <code>current_temperature</code> is outside the allowable range you …","The <code>target_temperature</code> is outside the allowable range you …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a set of all the errors that happened. If no error …","","","","","There are 2 modes of protection for temperature change:","","","","","","","","Makes sure a <code>Temperature</code> is in the allowed range you …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check <code>struct&#39;s documentation</code>.","Check <code>struct&#39;s documentation</code>.","","","","","","Makes sure the temperature change is “normal”. What “…","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Once the current temperature reaches the target …","While the current temperature is trying to reach the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A clock used to keep track of the <code>SystemTime</code> and the delta …","A clock in the microcontroller that can keep time.","","","Blocks this core of the microcontroller for the provided …","Blocks this core of the microcontroller for the provided …","","Returns the argument unchanged.","Returns the delta time between the <code>current time</code> and the …","Returns the amount of time this microcontroller has been …","Calls <code>U::from(self)</code>.","Returns a <code>Clock</code> that has just been <code>ticked</code>.","Returns the amount of time this microcontroller has been …","Saves the <code>current time</code> in the clock so that you can …","","","","This struct contains a <code>function pointer</code> that will be …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","The <code>Bresenham&#39;s line algorithm</code> is used by the …","","","","","Converts the provided <code>slice</code> to an array of the same type …","Implementation of <code>Bresenham&#39;s line algorithm</code>.","","","","Returns the argument unchanged.","Returns the index of the axis with the biggest distance to …","Calls <code>U::from(self)</code>.","","","Check <code>struct&#39;s documentation</code>.","","","","","","The <code>100%</code> value.","Extends the functionality of numbers types (like <code>f32</code>).","A percentage value.","The <code>0%</code> value.","","","","","","Returns <code>value</code> if <code>value</code> is contained in the provided <code>range</code>, …","","","","","Returns the argument unchanged.","Creates a new <code>Percentage</code> from the provided value that must …","Creates a new <code>Percentage</code> from the provided value that must …","Calls <code>U::from(self)</code>.","Returns the value of the percentage in the range <code>0..=1</code>.","Returns the value of the percentage in the range <code>0..=100</code>.","<code>Linearly interpolates</code> between <code>range.start()</code> and <code>range.end()</code>…","Map a value from a range to another.","","Returns the square of self (<code>self * self</code>).","","","","","","","","","<code>N</code> dimensional vector with components stored as <code>Distance</code>.","","","","","","","","Returns the <code>dot product</code> of this vector with <code>other</code>.","","","Returns the argument unchanged.","Examples","Examples","Examples","Examples","","","Calls <code>U::from(self)</code>.","Returns the length of this vector in millimeters.","Returns the square of the length of this vector in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An angle value.","","","","","","","","","","","","","","","","","","","","","","Computes the arccosine of a number. Return value is …","","","","","","","","","","","","","","","","","","","Returns the number of cycles this angle has.","","Returns an <code>angle</code> from a value in degrees.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Check if the inner angle is invalid (it could be invalid …","","Get the minimum of this and the other angle.","","","","","","Returns an <code>angle</code> from a value in radians.","","","","","","","","","","","","","","","","","","","","","Wrap the angle to range [-180°, 180°).","","Wrap the angle in the [0°, 360°) range.","","A distance with a <code>10 nanometer</code> sensitivity (10^-8 meters) …","","","","","","","An enum to represent the 2 units of measurement mainly …","","","","Returns the number of centimeters (<code>10^-2 meters</code>) this …","Returns the number of meters this distance represents (the …","Returns the number of micrometers (<code>10^-6 meters</code>) this …","Returns the number of millimeters (<code>10^-3 meters</code>) this …","Returns the number of millimeters (<code>10^-3 meters</code>) this …","Returns the number of tens of nanometers (<code>10^-8 meters</code>) …","","","","","","","","","","Create a <code>Distance</code> that represents the provided <code>value</code> in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Distance</code> from the provided centimeters (…","Returns a <code>Distance</code> from the provided inches (…","Returns a <code>Distance</code> from the provided micrometers (…","Returns a <code>Distance</code> from the provided millimeters (…","","Returns a <code>Distance</code> from the provided tens of nanometers (…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A <code>SmallDuration</code> with the highest value storable in this …","A <code>SmallDuration</code> with a duration 1 microsecond.","A <code>SmallDuration</code> with a duration 1 millisecond.","A <code>SmallDuration</code> with a duration 1 second.","A duration of time with a <code>10 nanoseconds</code> sensitivity and a …","A <code>SmallDuration</code> with a duration 0 seconds.","","","Returns the number of microseconds (<code>10^-6 seconds</code>) this …","Returns the number of milliseconds (<code>10^-3 seconds</code>) this …","Returns the number of milliseconds this duration …","Returns the number of nanoseconds (<code>10^-9 seconds</code>) this …","Returns the number of seconds this duration represents …","Returns the number of seconds this duration represents.","Returns the number of tens of nanoseconds (<code>10^-8 seconds</code>) …","","","","","","","","","","Returns the argument unchanged.","Converts the provided <code>Frequency</code> into a <code>SmallDuration</code>.","Returns a <code>SmallDuration</code> with a duration of the provided …","Returns a <code>SmallDuration</code> with a duration of the provided …","Returns a <code>SmallDuration</code> with a duration of the provided …","Returns a <code>SmallDuration</code> with a duration of the provided …","Returns a <code>SmallDuration</code> with a duration of the provided …","","Calls <code>U::from(self)</code>.","","","","","","","","","","A frequency value with a <code>1Hz</code> sensitivity and a range of …","Returns the number of hertz this frequency represents.","","","","","","","","","Returns the argument unchanged.","Converts the provided <code>SmallDuration</code> into a <code>Frequency</code>.","Returns a <code>Frequency</code> that represents the provided <code>hertz</code>.","","Calls <code>U::from(self)</code>.","","","","","","A temperature value.","Equivalent of <code>0°C</code> in the Kelvin scale.","","Returns the value of <code>Self</code> in degrees Celsius.","Returns the value of <code>Self</code> in Kelvin.","","","","","","","","Returns the argument unchanged.","Returns a <code>Temperature</code> of the provided <code>degrees</code> celsius.","Returns a <code>Temperature</code> of the provided <code>kelvin</code>.","Calls <code>U::from(self)</code>.","","","","","","","Simple implementation of a <code>mutual exclusion</code> primitive to …","Check <code>Mutex</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Blocks the thread until the mutex is unlocked and returns …","Returns a new mutex in an unlocked state.","","","","","If the mutex is unlocked returns <code>Some(MutexGuard&lt;T&gt;)</code> with …","",""],"i":[0,0,0,5,1,5,0,0,0,1,10,1,5,10,1,5,0,0,1,5,10,1,5,10,1,5,10,0,10,10,1,5,10,1,5,10,1,5,0,0,26,26,0,14,14,0,14,19,14,19,0,0,14,14,20,26,24,14,19,8,20,26,24,14,19,8,0,8,8,14,19,20,26,24,14,19,8,26,20,0,20,26,24,14,19,8,8,20,24,26,26,0,26,0,8,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,20,24,20,26,24,14,19,8,20,26,24,14,19,8,20,26,24,14,19,8,8,278,279,279,279,279,279,280,280,279,279,279,279,279,279,279,280,279,279,280,279,279,280,279,279,280,280,279,279,279,279,279,0,16,16,16,0,33,0,0,34,0,33,33,0,25,35,33,25,35,33,33,25,35,33,25,25,35,33,25,34,25,25,35,33,25,35,33,25,35,33,35,0,0,0,0,36,0,0,0,23,37,36,23,37,36,36,23,37,36,23,37,36,37,23,23,23,37,36,23,37,36,23,37,36,0,40,40,40,40,40,40,40,0,40,40,40,0,44,44,44,44,44,0,44,44,0,44,44,44,44,32,32,0,0,32,32,32,32,32,32,32,0,32,32,32,47,32,47,32,47,32,47,47,32,47,32,32,32,0,32,47,47,32,47,47,47,47,47,32,47,32,47,32,47,32,47,0,0,31,50,31,50,31,31,50,50,31,50,50,50,31,50,31,31,50,50,50,50,31,31,50,31,50,31,31,50,58,0,0,0,58,56,56,58,54,56,58,54,56,58,56,58,54,54,56,58,54,54,54,54,56,58,54,56,58,54,56,58,54,56,65,0,0,0,281,0,67,67,67,0,65,0,0,0,55,64,65,66,67,55,64,65,66,67,281,55,64,64,64,64,65,66,67,55,64,65,66,67,282,64,283,64,55,64,65,66,67,55,66,64,55,64,65,66,67,55,64,65,66,67,55,64,65,66,67,284,285,284,285,284,4,4,0,73,4,4,4,4,4,70,4,4,70,4,70,4,4,4,70,73,4,70,73,0,0,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,30,30,70,73,30,70,73,30,0,0,0,70,73,30,70,73,0,30,4,0,30,30,30,30,70,73,30,0,0,30,30,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,30,0,30,70,73,30,70,73,30,70,73,30,286,0,7,7,7,7,7,7,7,7,7,0,7,7,7,0,0,0,287,288,289,288,287,289,288,287,289,288,287,289,288,287,287,288,289,288,287,287,289,289,289,288,287,289,288,287,289,288,287,0,0,0,0,0,0,0,0,75,75,0,0,75,75,75,75,75,75,76,75,76,75,75,75,76,76,76,75,76,75,76,76,76,76,76,76,75,76,75,76,75,76,75,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,84,84,84,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,86,0,0,0,86,90,86,90,86,86,86,86,86,86,90,86,86,86,90,90,86,90,90,86,86,90,86,90,86,90,86,96,290,290,91,97,91,97,96,97,91,0,0,0,96,290,290,96,96,290,290,0,97,96,96,96,96,290,290,96,0,91,0,91,94,97,92,91,94,97,92,91,92,91,92,91,96,92,92,91,94,97,92,91,94,97,92,91,290,290,290,290,94,94,91,96,92,94,94,97,92,91,94,94,94,94,94,94,92,91,94,97,92,91,94,97,92,91,94,97,92,91,94,98,98,0,0,99,98,99,98,98,98,99,98,98,99,98,98,99,98,99,98,99,99,0,98,99,98,99,98,99,98,103,103,103,103,0,291,106,106,291,291,106,292,102,105,0,0,291,291,293,293,0,291,0,293,294,102,102,102,102,102,102,102,102,102,291,106,106,0,106,0,292,292,292,292,292,292,292,292,0,105,105,295,0,106,106,104,104,291,0,291,0,105,0,106,291,102,102,102,104,105,102,294,296,295,106,293,291,292,297,103,104,105,102,294,296,295,106,293,291,292,297,103,102,103,102,103,102,104,104,104,104,104,104,296,294,104,104,104,104,104,104,102,103,105,102,103,104,105,102,294,296,295,106,293,291,292,297,103,103,104,294,294,294,104,105,102,294,296,295,106,293,291,292,297,103,294,294,104,102,294,104,296,104,104,294,294,102,103,104,105,102,294,296,295,106,293,291,292,297,103,104,105,102,294,296,295,106,293,291,292,297,103,104,105,102,294,296,295,106,293,291,292,297,103,296,0,0,107,107,107,107,107,107,107,107,107,116,116,0,0,116,0,117,117,0,51,116,117,51,116,117,51,51,51,117,51,116,117,51,51,116,117,51,51,0,51,116,117,51,116,117,51,116,117,0,0,122,123,122,123,122,122,123,122,122,122,122,123,122,123,122,122,123,123,122,123,122,123,122,0,119,119,0,119,119,119,119,119,0,119,119,119,119,119,127,128,126,127,0,0,0,128,0,0,127,128,126,0,120,127,128,112,126,124,120,127,128,112,126,124,124,124,112,112,127,128,126,120,127,128,112,126,124,120,120,127,128,112,126,124,124,120,120,120,127,128,112,126,124,120,127,128,112,126,124,120,127,128,112,126,124,112,115,0,0,0,0,0,0,115,129,115,118,125,121,113,129,115,118,125,121,113,115,118,125,115,118,125,129,129,129,129,118,115,118,125,118,118,129,115,118,121,113,129,115,118,125,121,113,115,118,129,129,129,118,129,115,118,125,121,113,115,115,129,118,129,129,115,118,115,118,125,129,115,118,125,121,113,129,115,118,125,121,113,129,115,118,125,121,113,125,0,132,132,0,0,132,298,132,132,132,132,0,132,0,152,132,132,132,0,0,152,132,132,132,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,140,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,143,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,139,140,143,146,147,148,149,150,151,150,151,150,134,135,140,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,134,135,134,135,138,141,142,143,144,145,139,140,146,148,147,149,147,149,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,134,135,138,143,134,135,138,143,134,135,138,143,155,156,0,0,0,156,155,0,0,133,133,156,154,155,133,156,154,155,133,154,155,154,155,133,155,154,155,156,154,155,133,156,154,155,133,133,133,156,154,155,133,133,133,133,133,154,155,133,156,154,155,133,156,154,155,133,156,154,155,299,300,0,159,159,159,159,159,159,159,159,159,159,159,0,159,159,159,159,159,159,0,0,0,0,0,0,0,301,0,0,0,0,0,0,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,173,174,165,166,167,168,169,170,171,172,173,161,174,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,165,166,167,168,169,170,171,172,173,0,0,175,175,175,175,175,175,175,175,162,175,175,175,175,175,175,175,177,177,177,177,177,0,0,176,177,176,177,176,176,176,177,176,177,176,177,176,176,176,177,176,177,176,177,0,0,0,0,0,0,0,0,0,111,109,111,0,108,111,111,111,111,111,108,109,302,111,111,111,83,79,83,0,83,83,83,0,83,83,83,83,83,83,83,83,83,79,83,83,83,83,77,0,77,77,77,72,72,303,0,0,0,72,72,72,303,303,72,303,303,0,74,0,74,74,74,304,0,305,0,304,305,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,182,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,181,183,184,183,185,186,187,188,181,189,181,190,191,192,193,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,186,187,183,186,183,198,192,187,199,199,187,190,200,190,187,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,183,189,187,201,201,190,183,193,193,193,187,187,205,190,200,184,186,189,189,190,206,190,191,206,192,207,183,183,199,199,183,198,198,211,211,190,183,183,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,212,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,206,205,185,187,181,182,183,207,190,200,201,211,198,212,184,186,199,191,214,188,189,192,193,190,200,214,181,190,191,218,218,218,218,218,0,0,0,218,0,0,0,0,0,217,217,0,0,224,215,219,223,224,306,217,218,215,219,223,224,306,217,218,215,223,224,217,218,215,219,223,224,306,217,218,219,219,219,219,0,215,219,223,224,306,217,218,0,223,223,224,219,215,215,219,215,215,224,219,0,224,224,223,224,306,219,219,219,219,219,0,223,306,215,219,223,224,306,217,218,215,219,223,224,306,217,218,215,219,223,224,306,217,218,223,223,223,224,223,0,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,229,71,71,229,71,0,0,0,229,0,229,231,227,229,231,227,229,229,71,227,229,231,227,229,227,231,231,227,229,71,227,227,229,71,227,71,227,229,229,231,227,229,231,227,229,231,227,229,234,233,0,0,228,228,228,233,228,0,234,234,234,233,234,228,233,234,228,233,234,228,233,234,228,0,233,234,228,228,233,234,228,233,234,228,233,233,233,233,234,228,233,234,228,233,234,228,233,234,228,307,0,225,225,0,225,236,236,236,225,236,236,225,236,236,225,236,225,236,236,236,236,236,0,0,0,220,237,238,220,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,220,237,238,220,237,238,239,0,0,0,239,0,239,0,239,0,0,240,240,240,240,239,239,239,242,235,226,240,239,222,242,235,226,240,239,222,239,222,239,222,222,0,240,240,222,239,240,239,239,239,239,222,240,240,240,239,222,242,235,226,240,239,222,235,235,235,235,235,240,242,235,226,240,239,222,222,235,242,240,242,240,242,242,235,240,240,239,222,235,242,242,239,235,235,240,240,239,235,239,222,242,242,235,226,240,239,222,242,235,226,240,239,222,242,235,226,240,239,222,0,0,244,244,245,244,245,244,244,244,245,245,245,244,0,245,244,0,0,245,245,245,245,0,0,0,244,245,244,245,244,245,244,0,247,0,248,248,247,0,243,247,248,243,247,248,243,243,247,248,243,247,248,243,243,243,247,248,243,0,243,247,248,243,247,248,243,247,248,0,0,0,249,249,249,0,0,0,0,249,0,52,251,249,250,52,251,249,250,250,250,249,52,251,249,250,0,52,52,52,52,251,249,250,52,52,52,251,251,0,52,52,251,249,250,52,251,249,250,52,251,249,250,252,46,46,0,252,252,0,0,46,252,253,46,252,253,252,253,252,253,253,252,253,252,253,46,252,253,46,46,46,46,252,253,46,252,253,46,253,0,46,46,46,252,253,46,252,253,46,252,253,46,252,253,256,256,256,256,0,0,0,256,256,256,254,256,254,256,256,256,256,256,256,256,256,256,254,256,256,254,256,254,254,256,256,256,0,256,254,256,254,256,254,256,0,258,258,258,258,258,258,258,258,258,0,0,0,259,257,259,257,257,257,257,259,257,257,259,257,259,0,259,257,260,260,257,259,257,259,257,259,257,0,0,262,261,262,261,261,262,261,262,261,262,262,261,262,261,262,261,262,261,262,261,0,0,263,263,264,263,263,263,263,263,263,263,264,263,263,263,263,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,266,266,266,266,266,266,266,266,266,266,266,266,266,0,61,0,0,61,61,61,308,61,61,0,61,61,61,61,61,61,61,61,61,61,0,0,61,308,61,61,61,61,61,0,0,0,0,157,157,157,157,157,157,157,157,157,157,157,232,157,230,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,232,230,157,157,232,230,157,157,230,157,0,0,0,0,0,0,0,0,0,272,309,0,272,273,272,273,272,273,272,273,272,273,273,273,272,273,272,272,272,273,272,273,272,273,272,273,272,273,272,272,272,272,272,272,273,272,273,272,273,272,272,0,272,272,272,272,272,272,272,272,272,272,272,273,272,272,272,272,272,272,272,272,0,273,272,273,272,273,272,272,272,273,272,273,272,273,272,273,272,272,272,272,273,272,273,272,153,0,153,158,153,153,158,153,0,153,153,153,153,153,153,153,153,153,153,158,153,158,153,158,153,158,153,158,153,158,153,153,153,158,153,158,153,158,153,153,153,153,153,153,153,153,158,153,153,153,153,153,153,153,153,158,153,158,153,158,153,158,89,89,89,89,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,277,53,277,53,53,53,53,277,53,277,53,277,277,277,53,277,53,277,277,53],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[1,[-1]],2],3,4],[[[5,[-1]],2],3,[6,4]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,7,8,9],[[11,[[10,[-1]],[5,[-1]]]]],4],0,[[[10,[-1]]],[[11,[12,[1,[-1]]]]],4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[14,[-1,-2,-3,-4]],2],3,15,16,[[18,[17]]],6],[[[19,[-1]],2],3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[]],[[[20,[-1]]],[[21,[12]]],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,8],[[11,[[20,[-1]],22]]],4],[[-1,8,[23,[-1]]],[[11,[[24,[-1]],[14,[25]]]]],4],[-1,[[26,[-1]]],4],[-1,[[26,[-1]]],4],0,[[]],0,0,[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],[[27,[[29,[28]]]]],4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[26,[-1]]],27,4],[[[20,[-1]],[30,[[26,[-1]]]]],12,4],[[[24,[-1]]],[[11,[12,[19,[-1]]]]],4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[31,[-2]]],[[11,[12]]],[],4],[[-1,32,[31,[-2]]],[[11,[12]]],[],4],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]],2],3,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[25,[-1,-2]]],-1,15,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,35],[[11,[[25,[-1,-2]],[33,[-1]]]]],15,34],[[-1,32,[31,[-2]]],[[11,[12]]],[],4],[[[25,[-1,-2]],32,[31,[-3]]],[[11,[12]]],15,34,4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]],[30,[-1]]],12,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1]]],[[38,[[36,[-1]]]]],4],[[],[[12,[[23,[-1]],[37,[-1]]]]],4],[[[23,[-1]],[36,[-1]]],[[11,[12,[39,[[36,[-1]]]]]]],4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[[40,41],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[40,42],[[27,[[12,[43,42]]]]]],[-1,-2,[],[]],[[],40],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],12,[],[]],[-1,-1,[]],[[],44],[-1,-2,[],[]],[[44,-1],11,45],[[46,46],12],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[47,47],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[47,2],3],[-1,-1,[]],[-1,-1,[]],[32],[32,48],[32,43],[[],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],47],[47,49],[47,27],[47,27],[[47,49],27],[47,[[12,[49,[27,[49]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]]],[[31,[-1]]],4],[[-1,-2],12,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],0,[[[50,[-1]]],[[12,[51,[52,[-1]]]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]]],[[53,[[50,[-1]]]]],4],[[27,51,54,55,[23,[-1]],[52,[-1]]],[[31,[-1]]],4],0,0,0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[31,[-1]]],[[27,[[53,[[50,[-1]]]]]]],4],[-1,13,[]],[-1,13,[]],0,0,0,0,0,[[[56,[-1]]],[[11,[12]]],57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[11,[12]]],57],[[[58,[-1]],2],3,57],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[54,[-1]],49],[[11,[[56,[-1]]]]],57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],59,57],[-1,[[54,[-1]]],57],[[[54,[-1]]],12,57],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[56,[-1]],[60,[17]]],[[11,[61,[58,[-1]]]]],57],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,59,[]],[[55,[62,[-1]],[53,[[50,[-2]]]]],59,63,4],[64,64],[[-1,-2],12,[],[]],[[64,64],59],[[64,2],3],[[65,2],3],[[66,2],3],[[67,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[62,[-1]],[53,[[50,[-2]]]]],[[11,[-3,12]]],63,4,68],[[[62,[-1]],[53,[[50,[-2]]]]],[[11,[64,12]]],63,4],[-1,[[27,[64]]],[]],[[64,-1],12,69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,[[11,[55,65]]]],0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[70,[-1,-2]],2],3,71,72],[[[73,[-1,-2,-3]],2],3,[6,72],[6,71],[6,74]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,7],[[11,[[30,[-1]],73]]],4],0,0,[[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,[[27,[[29,[28]]]]],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,[[[30,[-1]]],[[11,[12,70]]],4],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,75],[[-1,-2],12,[],[]],[[[76,[-1,-2]]],[[11,[12]]],77,[78,79]],[[[76,[-1,-2]],2],3,77,[78,79]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2]]],[[11,[59]]],77,[78,79]],[[-1,-2],[[11,[[76,[-1,-2]]]]],77,[78,79]],[[[76,[-1,-2]],-3],[[11,[12]]],77,[78,79],[80,81]],[[[76,[-1,-2]],-3],[[11,[12]]],77,[78,79],[80,81]],[[[76,[-1,-2]]],[[11,[12]]],77,[78,79]],[[[76,[-1,-2]],75],[[11,[12]]],77,[78,79]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[82,[-1]]],[[11,[59]]],[78,79]],[[[82,[-1]]],[[11,[59]]],78],[[[82,[-1]]],[[11,[59]]],78],[[[82,[-1]]],[[11,[59]]],78],[-1,[[82,[-1]]],78],[[[82,[-1]],-2],[[11,[12]]],[78,79],[80,81]],[[[82,[-1]],-2],[[11,[12]]],[78,79],[80,81]],[[[82,[-1]],83,-2],[[11,[12]]],[78,79],[80,81]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[84,[-1]]],77],[[[84,[-1]],61],[[11,[12]]],77],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,61],[[85,[-1]]],77],[[[85,[-1]],61],[[11,[12]]],77],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,[86,87],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,86],[[-1,-2],12,[],[]],[[86,86],88],[[86,86],59],[[86,2],3],[-1,-1,[]],[-1,-1,[]],[87,[[11,[86,12]]]],[89,[[11,[86,12]]]],[[[90,[-1]]],[[27,[86]]],77],[-1,-2,[],[]],[-1,-2,[],[]],[[[90,[-1]],86],[[11,[12]]],77],[-1,[[11,[[90,[-1]]]]],77],[[86,86],[[27,[88]]]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[91,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[91,91],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[93,[94,[-1,-2]]],[[11,[59]]],68,[[18,[17]]]],[[93,[94,[92,-1]]],[[11,[59]]],[[18,[17]]]],[[92,92],59],[[91,91],59],[[[94,[-1,-2]],[95,[93]]],[[11,[12]]],96,[[18,[17]]]],[[[97,[-1]],2],3,[[18,[17]]]],[[92,2],3],[[91,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[93,42],[93,42],[42,93],[42,93],[[[94,[-1,-2]]],-1,96,[[18,[17]]]],[[[94,[-1,-2]],91],[[11,[17]]],96,[[18,[17]]]],[[91,-1],12,69],[[[94,[-1,-2]]],[[11,[12]]],68,[[18,[17]]]],[[[94,[92,-1]]],[[11,[12]]],[[18,[17]]]],[[[94,[-1,-2]],[95,[42]],42],[[11,[12]]],96,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[94,[-2,-1]]],[[18,[17]]],96],[[[94,[-1,-2]],[60,[17]],42],[[11,[12]]],96,[[18,[17]]]],[[[94,[-1,-2]],42,[60,[17]]],[[11,[12]]],96,[[18,[17]]]],[[[94,[-1,-2]],[0,[-1]],[60,[17]]],[[11,[12]]],96,[[18,[17]]]],[[[94,[-1,-2]]],[[11,[12]]],96,[[18,[17]]]],[[[94,[-1,-2]],91,17],[[11,[12]]],96,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[94,[-1,-2]]],[[11,[12,[97,[-2]]]]],96,[[18,[17]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[[-1,-2],12,[],[]],[[[99,[-1,-2]]],[[11,[12]]],100,100],[[98,98],59],[[98,2],3],[-1,-1,[]],[-1,-1,[]],[101,98],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[99,[-1,-2]]],100,100],[98,98],[[[99,[-1,-2]],98],[[11,[12]]],100,100],[[[99,[-1,-2]]],[[11,[12]]],100,100],0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[102,17],[102,93],[102,93],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,102],[103,103],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[102,102],88],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],0,0,[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[104,-1],[[11,[12]]],74],[[102,102],59],[[103,103],59],[[[105,[-1]],2],3,74],[[102,2],3],[[103,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[59,59],103],[104,102],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[103,-1],[[11,[104]]],74],[[102,102],[[27,[88]]]],0,[[104,106,-1],[[11,[17,[105,[-1]]]]],74],0,[[104,[27,[61]],[27,[61]],-1],[[11,[12]]],74],[[104,102,-1],[[11,[12]]],74],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[-2,42,42,42],[[107,[-1,-2]]],108,[[109,[-1]]]],[[[107,[-1,-2]],-1],[[11,[110,[111,[-1,-2]]]]],108,[[109,[-1]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[51,[-1,-2]],-3,42],[[11,[[112,[-1,-2]],113]]],96,[[18,[17]]],[[114,[41]]]],[[[51,[-1,-2]],115],[[11,[12,[116,[-2]]]]],96,[[18,[17]]]],[[[51,[-1,-2]],115],59,96,[[18,[17]]]],[[[117,[-1]],2],3,[[18,[17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[51,[-1,-2]]],[[60,[118]]],96,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1,-2]],119],[[11,[[51,[-1,-2]],[117,[-2]]]]],96,[[18,[17]]]],[[[51,[-1,-2]],115],[[11,[[120,[-1,-2]],121]]],96,[[18,[17]]]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[122,123],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],122],[-1,-1,[]],[-1,-1,[]],[[[60,[17]]],122],[[[94,[-1,-2]]],[[11,[122]]],96,[[18,[17]]]],[122,[[60,[93]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[122,93],59],[[122,93],12],[123,27],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[119,[[95,[42]]]],0,[[],119],[-1,-1,[]],[-1,-2,[],[]],0,[119,[[95,[42]]]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[124,118,-1,125],[[112,[-2,-3]]],[[114,[41]]],96,[[18,[17]]]],[[124,118,[94,[-1,-2]]],[[11,[12]]],96,[[18,[17]]]],[[[112,[-1,-2]]],12,96,[[18,[17]]]],[[[112,[-1,-2]],[51,[-1,-2]]],[[11,[12,[126,[-2]]]]],96,[[18,[17]]]],[[[127,[-1]],2],3,[[18,[17]]]],[[[128,[-1]],2],3,[[18,[17]]]],[[[126,[-1]],2],3,[[18,[17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[120,[-1,-2]]],59,96,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[124,118,125],[[120,[-1,-2]]],96,[[18,[17]]]],[[[120,[-1,-2]],[51,[-1,-2]],[60,[17]]],[[11,[42,[127,[-2]]]]],96,[[18,[17]]]],[[[120,[-1,-2]],[51,[-1,-2]]],[[11,[41,[128,[-2]]]]],96,[[18,[17]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[112,[-1,-2]],[51,[-1,-2]],[60,[17]]],[[11,[12,[126,[-2]]]]],96,[[18,[17]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,115],[118,118],[125,125],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[129,[94,[-1,-2]]],[[11,[12]]],96,[[18,[17]]]],[[129,42,119],[[11,[[12,[115,42]],113]]]],[[129,115],[[11,[118,121]]]],[[129,115],59],[118,42],[[115,115],59],[[118,118],59],[[125,125],59],0,0,[[129,115,[94,[-1,-2]],119],[[11,[12]]],96,[[18,[17]]]],[[115,2],3],[[118,2],3],[[121,2],3],[[113,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[130,[17]]],115],[[[60,[17]]],118],[[129,115],[[27,[118]]]],[129,125],[129,[[60,[118]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,115],[[115,115],[[27,[88]]]],[[[94,[-1,-2]],119],[[11,[129]]],96,[[18,[17]]]],0,[[129,118,[94,[-1,-2]],119],[[11,[12]]],96,[[18,[17]]]],[[129,[94,[-1,-2]],119],[[11,[12]]],96,[[18,[17]]]],[115,[[130,[17]]]],[118,[[130,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[125,129],59],0,0,0,0,0,0,[-1,131,[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,132],[[-1,-2],12,[],[]],0,[[132,132],59],0,[[-1,[30,[-2]],[133,[-2]]],132,[],[]],[[132,2],3],[-1,-1,[]],[-1,-2,[],[]],0,0,[[-1,[30,[-2]],[133,[-2]]],132,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],[-1,131,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[],134],[[],135],[[],136],[[],137],[[],138],[[],139],[[],140],[[],141],[[],142],[[],143],[[],144],[[],145],[[],146],[[],147],[[],148],[[],149],[[],150],[[],151],0,0,0,[[134,134],59],[[135,135],59],[[136,136],59],[[137,137],59],[[138,138],59],[[139,139],59],[[140,140],59],[[141,141],59],[[142,142],59],[[143,143],59],[[144,144],59],[[145,145],59],[[146,146],59],[[147,147],59],[[148,148],59],[[149,149],59],[[150,150],59],[[151,151],59],[[134,[30,[-1]],[133,[-1]]],132,4],[[135,[30,[-1]],[133,[-1]]],132,4],[[136,[30,[-1]],[133,[-1]]],132,4],[[137,[30,[-1]],[133,[-1]]],132,4],[[139,[30,[-1]],[133,[-1]]],132,4],[[140,[30,[-1]],[133,[-1]]],132,4],[[143,[30,[-1]],[133,[-1]]],132,4],[[146,[30,[-1]],[133,[-1]]],132,4],[[147,[30,[-1]],[133,[-1]]],132,4],[[148,[30,[-1]],[133,[-1]]],132,4],[[149,[30,[-1]],[133,[-1]]],132,4],[[150,[30,[-1]],[133,[-1]]],132,4],[[151,[30,[-1]],[133,[-1]]],132,4],0,0,0,0,0,0,[[134,2],3],[[135,2],3],[[136,2],3],[[137,2],3],[[138,2],3],[[139,2],3],[[140,2],3],[[141,2],3],[[142,2],3],[[143,2],3],[[144,2],3],[[145,2],3],[[146,2],3],[[147,2],3],[[148,2],3],[[149,2],3],[[150,2],3],[[151,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[134,[30,[-1]],[133,[-1]]],132,4],[[135,[30,[-1]],[133,[-1]]],132,4],[[138,[30,[-1]],[133,[-1]]],132,4],[[141,[30,[-1]],[133,[-1]]],132,4],[[142,[30,[-1]],[133,[-1]]],132,4],[[143,[30,[-1]],[133,[-1]]],132,4],[[144,[30,[-1]],[133,[-1]]],132,4],[[145,[30,[-1]],[133,[-1]]],132,4],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[133,[-1]],[29,[152]]],12,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[133,[-1]],[30,[-1]],[27,[153]],[27,[153]],[27,[153]],[27,[153]]],12,4],[154,154],[155,155],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[],[[133,[-1]]],4],[[],155],[[154,154],59],[[155,155],59],[[156,2],3],[[154,2],3],[[155,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[133,[-1]],49],[[11,[157,154]]],4],[[[133,[-1]]],59,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[133,[-1]],157,49],[[11,[12,154]]],4],[[[133,[-1]],155],12,4],[[[133,[-1]],155],12,4],[[[133,[-1]],158],12,4],[[[133,[-1]],[30,[-1]]],[[11,[12,156]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[159,[-1,-2]]],[[159,[-1,-2]]],[160,161],[160,162]],[[-1,-2],12,[],[]],[[],[[159,[-1,-2]]],161,162],[[[159,[-1,-2]],[159,[-1,-2]]],59,[163,161],[163,162]],[[[159,[-1,-2]],2],3,[6,161],[6,162]],[164,-1,[]],[-1,[[159,[-2,-1]]],162,161],[-1,-1,[]],[[[27,[-1]]],[[159,[-2,-1]]],162,161],0,[-1,-2,[],[]],[[[27,[-1]],[27,[-2]]],[[159,[-1,-2]]],161,162],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[[[173,[-1]]],[[173,[-1]]],[160,174]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[],165],[[],166],[[],167],[[],168],[[],169],[[],170],[[],171],[[],172],[[],[[173,[-1]]],174],[[165,165],59],[[166,166],59],[[167,167],59],[[168,168],59],[[169,169],59],[[170,170],59],[[171,171],59],[[172,172],59],[[[173,[-1]],[173,[-1]]],59,174],[[165,2],3],[[166,2],3],[[167,2],3],[[168,2],3],[[169,2],3],[[170,2],3],[[171,2],3],[[172,2],3],[[[173,[-1]],2],3,[6,174]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[173,[-1]]],59,174],[93,59],[93,59],[93,59],[93,59],[93,59],[93,59],[93,59],[93,59],[93,59],[[[173,[-1]]],59,174],[[-1,43],[[11,[49,12]]],[]],[43,[[12,[93,49]]]],[43,[[12,[93,49]]]],[[165,43],[[11,[49,12]]]],[[166,43],[[11,[49,12]]]],[43,[[12,[93,49]]]],[43,[[12,[93,49]]]],[[167,43],[[11,[49,12]]]],[[168,43],[[11,[49,12]]]],[43,[[12,[93,49]]]],[[169,43],[[11,[49,12]]]],[43,[[12,[93,49]]]],[[170,43],[[11,[49,12]]]],[43,[[12,[93,49]]]],[43,[[12,[93,49]]]],[[171,43],[[11,[49,12]]]],[43,[[12,[93,49]]]],[[172,43],[[11,[49,12]]]],[[[173,[-1]],43],[[11,[49,12]]],174],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[175,175],[[-1,-2],12,[],[]],[[],175],[[175,175],59],[[175,2],3],[-1,-1,[]],[[43,158],[[11,[-1,12]]],68],[[43,158],[[11,[175,12]]]],[[175,-1],12,69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[176,176],[[-1,-2],12,[],[]],[[],176],[[[177,[-1]],2],3,[6,4]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[176,43],[[177,[-1]]],4],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[111,[-1,-2]],2],3,108,[[109,[-1]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,[],[]],[[-1,-2],11,[],[]],[[-1,-2],[[11,[61,[111,[-2,-1]]]]],68,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[[-1,-2],12,[],[]],[[83,83],59],[[83,2],3],[-1,-1,[]],[[83,-1],12,69],[-1,-2,[],[]],[[-1,83,-2],[[11,[12]]],[],[80,81]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,[-1,61,[]],[[-1,61],[[11,[12]]],[]],[[-1,178],[[11,[12]]],[]],0,0,0,0,0,[[179,178],180],[[-1,59],[[11,[12]]],[]],[-1,[],[]],[-1,178,[]],[-1,[[11,[179]]],[]],[-1,[[11,[180]]],[]],[[-1,-2],[[11,[12]]],[],[80,81]],[[-1,179],[[11,[12]]],[]],[[-1,180],[[11,[12]]],[]],[[180,178],179],0,0,[-1,[[11,[12]]],[]],[[-1,[60,[17]],89],[[11,[49]]],[]],[[-1,[60,[17]]],[[11,[49]]],[]],0,0,0,0,[-1,[[11,[12]]],[]],[-1,27,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[181,[[11,[12]]]],[182,[[11,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,[[11,[12]]]],[183,[[11,[12]]]],[[184,179],12],[183,[[11,[12]]]],[[185,185]],[[186,59],[[11,[12]]]],[187,[[11,[12]]]],[188,[[11,[12]]]],[181,11],[189,[[11,[12]]]],[181,[[11,[12]]]],[190,[[11,[12]]]],[191,[[11,[12]]]],[[192,2],3],[[193,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[186],[187,[[11,[194]]]],[183,[[11,[[196,[195]]]]]],[186,178],[183,[[11,[197]]]],[198,61],[[]],[187,[[11,[194]]]],[199,[[11,[179]]]],[199,[[11,[180]]]],[187,[[11,[194]]]],[[190,43],[[27,[43]]]],[[200,43],[[27,[43]]]],[[190,93,[27,[43]],[60,[[12,[43,43]]]]],[[11,[12]]]],[187,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[183,[[11,[59]]]],[189,[[11,[59]]]],[187,[[11,[59]]]],[201,[[11,[59]]]],[201,[[11,[59]]]],[190,59],[183,[[11,[59]]]],[193,202],[193,203],[193,204],[187],[187,[[11,[12]]]],[205],[190,48],[200,48],[184,179],[[186,-1],[[11,[12]]],80],[[189,-1],[[11,[12]]],80],[189,[[11,[12]]]],[190,11],[[206,205],11],[[190,[60,[17]]],[[11,[49]]]],[[191,[60,[17]],89],[[11,[49]]]],[[-1,-2],[[11,[61,[111,[-2,-3]]]]],[],[],[]],[[]],[[207,32,[31,[-1]]],[[11,[12]]],4],[183,[[11,[[209,[208]]]]]],[183,[[11,[[12,[[210,[208]],49]]]]]],[[199,179],[[11,[12]]]],[[199,180],[[11,[12]]]],[[183,197],[[11,[12]]]],[[198,61],[[11,[12]]]],[[198,178],[[11,[12]]]],[211,[[11,[12]]]],[211,[[11,[12]]]],[190,12],[183,[[11,[12]]]],[183,[[11,[12]]]],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,[[27,[[29,[28]]]]]],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[192,27],[[212,[60,[[213,[17]]]]],[[11,[12]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[190,43],[200,43],[214,27],[[181,[60,[17]]],[[11,[49]]]],[[190,[60,[17]]],[[11,[49]]]],[[191,[60,[17]]],[[11,[49]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[215,153],216],0,0,[[[217,[-1]],2],3,72],[[[218,[-1,-2,-3]],2],3,[6,72],[6,71],[6,74]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[219,[-1,-2,-3]]],[[27,[157]]],72,220,71],[[[219,[-1,-2,-3]]],[[27,[157]]],72,220,71],[[[219,[-1,-2,-3]],221],104,72,220,71],[[[219,[-1,-2,-3]],222],59,72,220,71],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[219,[-1,-2,-3]]],12,72,220,71],[[215,216],153],[[153,42],215],[[[223,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]],224,-14],[[11,[[219,[-1,-2,-13]],[218,[-1,-13,-14]]]]],72,220,[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],[225,81],[225,81],71,74],[[42,153,42],215],[[42,153,42],215],0,[[[219,[-1,-2,-3]],[27,[153]],[27,[153]],[27,[153]],[27,[153]],[27,[101]]],[[11,[222,226]]],72,220,71],0,0,0,0,0,0,[[[219,[-1,-2,-3]],59],[[11,[12,[217,[-1]]]]],72,220,71],[[[219,[-1,-2,-3]],[27,[153]],[27,[153]],[27,[153]],[27,[153]]],12,72,220,71],[[[219,[-1,-2,-3]]],12,72,220,71],[[[219,[-1,-2,-3]]],[[11,[12,226]]],72,220,71],[[[219,[-1,-2,-3]]],[[11,[12,[228,[[227,[-3]]]]]]],72,220,71],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[221,221],[[-1,-2],12,[],[]],[[221,221],59],[[221,2],3],[-1,-1,[]],[[221,-1],12,69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,[[229,-1],[[11,[12,12]]],220],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],229],[-1,[[11,[12]]],[]],[[[227,[-1]]],[[11,[12]]],71],[229,[[11,[12,12]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[227,[-1]]],230,71],[[231,17],[[12,[17,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[59]]],[]],[[[227,[-1]]],[[11,[59]]],71],[[-1,230],[[227,[-1]]],71],[[],229],[[-1,-2],[[11,[12]]],[],[80,81]],[[[227,[-1]],-2],[[11,[12]]],71,[80,81]],[-1,[[11,[12]]],[]],[[[227,[-1]]],[[11,[12]]],71],[[229,93,153],[[11,[12,12]]]],[[229,232,[12,[17,17]],153],12],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[233,233],[234,234],[[[228,[-1]]],[[228,[-1]]],[160,225]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[233,233],59],[[234,234],59],[[[228,[-1]],[228,[-1]]],59,[163,225]],[[[228,[-1]],2],3,225],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[233,59],[[233,235,-1],[[11,[12,226]]],28],[[233,235,-1,-2,232],[[11,[12,[228,[-2]]]]],28,225],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],236],[-1,[[11,[12]]],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[11,[59]]],[]],[236,[[11,[59]]]],[[],236],[[-1,-2],[[11,[12]]],[],[80,81]],[[236,-1],[[11,[12]]],[80,81]],[-1,[[11,[12]]],[]],[236,12],[236,12],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[237,237],[238,238],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[237,237],59],[[238,238],59],[[237,2],3],[[238,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],[[153,153],153],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[239,-1],[],[[114,[[196,[239]]]]]],[[239,-1],[],[[114,[[196,[239]]]]]],[[239,-1],[],[[114,[[196,[239]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[239,239],[222,222],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[222,222],88],0,0,[[],240],[[],222],[-1,[[11,[[196,[239]]]]],241],0,[42,239],[239,42],[[239,239],59],[[239,[196,[239]]],59],[[222,222],59],0,0,[[240,2],3],[[239,2],3],[[222,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[235,157],[235,242],[235,59],[[235,[196,[239]]],59],[[235,222],59],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[222,59],[235,12],0,0,0,0,0,0,[[49,[243,[-1]],242],235,72],0,0,[239],[[222,222],[[27,[88]]]],[[235,157,[130,[101]],101],[[11,[222,226]]]],0,0,[[[196,[239]],-1],11,45],[[235,[196,[239]]],12],[[235,157],12],0,0,[[239,-1],[],[[114,[[196,[239]]]]]],[235,[[27,[[130,[216]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[244,244],[[-1,-2],12,[],[]],0,[245,12],[-1,-1,[]],[-1,-1,[]],[[],[[27,[[53,[245]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],59],[[],59],0,[[245,246,41],12],0,[245,12],[[],12],[[],12],[-1,12,28],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[243,[-1]]],[[11,[12]]],72],[[[243,[-1]]],[[11,[12,[247,[-1]]]]],72],[[[247,[-1]],2],3,72],[[[248,[-1,-2]],2],3,[6,72],[6,71]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[243,[-1]]],178,72],[[[243,[-1]]],[[11,[179]]],72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[99,[-1,-2]],[99,[-3,-4]],[99,[-5,-6]],[99,[-7,-8]],-9,-10,-11,[227,[-12]]],[[11,[[243,[-9]],[248,[-9,-12]]]]],[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],[100,81],72,[225,81],[225,81],71],[[],12],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[],59],[[],12],[[],12],0,0,0,0,0,0,0,0,[93,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[249,[-1]],2],3,[[18,[17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],93],[[[52,[-1]]],[[27,[115]]],4],[[[52,[-1]]],[[27,[42]]],4],[[[52,[-1]]],[[27,[179]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,[[52,[-1]]],4],[[[52,[-1]],43],[[11,[[250,[-1]],12]]],4],[[[52,[-1]],115,[27,[179]]],12,4],0,0,[93,12],[[[52,[-1]],51,93],[[11,[[251,[-1]],249]]],4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[252,252],[253,253],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[252,252],59],[[253,253],59],[[252,2],3],[[253,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[46,[-1,-2,-3]],-2],[[11,[110,[111,[-2,-3]]]]],77,108,[[109,[-2]]]],[[[46,[-1,-2,-3]]],[[27,[110]]],77,108,[[109,[-2]]]],[[[46,[-1,-2,-3]]],253,77,108,[[109,[-2]]]],[[[46,[-1,-2,-3]]],110,77,108,[[109,[-2]]]],[[252,-1],12,69],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[107,[-1,-2]],[84,[-3]],253,254],[[46,[-3,-1,-2]]],108,[[109,[-1]]],77],0,0,[[[46,[-1,-2,-3]],253],12,77,108,[[109,[-2]]]],[[[46,[-1,-2,-3]],110],12,77,108,[[109,[-2]]]],[[[46,[-1,-2,-3]],255,-2],[[11,[12,252]]],77,108,[[109,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,[[256,-1],[],[[114,[[196,[256]]]]]],[[256,-1],[],[[114,[[196,[256]]]]]],[[256,-1],[],[[114,[[196,[256]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[256,256],[[-1,-2],12,[],[]],[-1,[[11,[[196,[256]]]]],241],[42,256],[256,42],[[256,256],59],[[256,[196,[256]]],59],[[256,2],3],[-1,-1,[]],[-1,-1,[]],[[256,-1],12,69],[-1,-2,[],[]],[-1,-2,[],[]],[[254,110,110,101],[[196,[256]]]],[[[95,[110]],257,257,49],254],[256],[[[196,[256]],-1],11,45],[[256,-1],[],[[114,[[196,[256]]]]]],0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[258,110],59],[[[95,[110]]],258],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[257,257],[[-1,-2],12,[],[]],[[257,2],3],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[259,[-1]],110,110,101],59,260],0,[[-1,257],[[259,[-1]]],260],0,[[-1,110,110,257,101],59,[]],[[-1,110,110],59,[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],261],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,262],[[262,110,110,257,101],59],[[261,110,110,257,101],59],[[262,110,110],59],[[261,110,110],59],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,179],12,[]],[[[263,[-1]],179],12,264],[[[263,[-1]],2],3,264],[-1,-1,[]],[[[263,[-1]]],179,264],[[[263,[-1]]],179,264],[-1,-2,[],[]],[-1,[[263,[-1]]],264],[-1,179,[]],[[[263,[-1]]],12,264],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,[[[60,[-1]]],[[130,[-1]]],[160,265]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[266,2],3],[-1,-1,[]],[266,49],[-1,-2,[],[]],[-1,-2,[],[]],[266,49],[[[130,[216]],[130,[216]]],266],[266,27],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[[],12],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-1],-1,[]],[61,61],[[-1,-2],12,[],[]],[[-1,[95,[-1]]],-1,[265,267]],[[],61],[[61,61],59],[[61,2],3],[[61,2],3],[-1,-1,[]],[101,[[11,[61,12]]]],[101,[[11,[61,12]]]],[-1,-2,[],[]],[61,101],[61,101],[[101,[95,[-1]]],-1,[]],[[-1,[95,[-1]],[95,[-1]]],-1,[160,265,268,269,270,271]],[[61,61],[[27,[88]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,[[157,157]],[-1,-2,[],[]],[-1,-2,[],[]],[157,157],[[-1,-2],12,[],[]],[[],157],[[157,157],153],[[157,157],59],[[157,2],3],[-1,-1,[]],[[153,153],232],[[153,153],157],[[153,153,153],230],[[153,153,153],157],[[157,49]],[[157,49]],[-1,-2,[],[]],[157,101],[157,101],[[157,101]],[[157,101],12],[157],[[[130,[153]]],157],[157,157],[[157,157]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[232,153],[230,153],[157,153],[157,153],[232,153],[230,153],[157,153],[157,153],[230,153],[157,153],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,[[272,[-1]]],273],[-1,-1,[]],[-1,[[272,[-1]]],273],[[[272,[-1]],[272,[-1]]],[],273],[[[272,[-1]],[272,[-1]]],12,273],[-1,-1,[]],[-1,[[272,[-1]]],273],[-1,-1,[]],[-1,[[272,[-1]]],273],[-1,-1,[]],[-1,[[272,[-1]]],273],[[-1,-1],-1,[]],[[[272,[-1]],[272,[-1]]],[[272,[-1]]],273],[-1,-1,[]],[-1,[[272,[-1]]],273],[-1,-2,[],[]],[-1,-2,[],[]],[[[272,[-1]],[272,[-1]],[272,[-1]]],[[272,[-1]]],273],[[[272,[-1]]],[[272,[-1]]],[160,273]],[[-1,-2],12,[],[]],[-1,-1,[]],[[[272,[-1]]],-1,273],[-1,-1,[]],[[[272,[-1]]],-1,273],[-1,42,[]],[[[272,[-1]]],42,273],[[],[[272,[-1]]],[274,273]],[-1,[[272,[-1]]],273],[[[272,[-1]],-1],[],273],[[[272,[-1]],-1],12,273],[[[272,[-1]],[272,[-1]]],59,273],[[[272,[-1]],2],3,[273,275]],[[[272,[-1]],2],3,[273,275]],[-1,-1,[]],[-1,[[272,[-1]]],273],[-1,[[272,[-1]]],273],[-1,-2,[],[]],[[[272,[-1]]],-1,273],[[[272,[-1]]],-1,273],[-1,59,[]],[[[272,[-1]]],59,273],[[[272,[-1]],[272,[-1]]],[[272,[-1]]],273],[[[272,[-1]],[272,[-1]]],[[272,[-1]]],273],[[[272,[-1]],-1],[],273],[[[272,[-1]],-1],12,273],[[[272,[-1]],-1],[[272,[-1]]],273],[[[272,[-1]]],[],273],[[[272,[-1]],[272,[-1]]],[[27,[88]]],273],[-1,[[272,[-1]]],273],[-1,-1,[]],[[[272,[-1]]],-1,273],[-1,[[12,[-1,-1]]],[]],[[[272,[-1]]],[[12,[-1,-1]]],273],[-1,-1,[]],[[[272,[-1]]],-1,273],[[[272,[-1]],[272,[-1]]],[],273],[[[272,[-1]],[272,[-1]]],12,273],[-1,-1,[]],[[[272,[-1]]],-1,273],[-1,-1,[]],[[[272,[-1]]],-1,273],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,41,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,-1,[]],[[[272,[-1]]],[[272,[-1]]],273],[-1,-1,[]],[[[272,[-1]]],[[272,[-1]]],273],0,0,0,0,0,0,0,0,0,0,[[153,153]],[[153,153],12],[153,216],[153,216],[153,216],[153,216],[153,101],[153,216],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[153,153],[158,158],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[153,153],88],[[158,43],[[11,[153,276]]]],[[],153],[[],158],[[153,153]],[[153,216]],[[153,153],59],[[158,158],59],[[153,2],3],[[158,2],3],[-1,-1,[]],[-1,-1,[]],[216,153],[101,153],[216,153],[216,153],[[43,158],[[11,[153,12]]]],[216,153],[[153,-1],12,69],[-1,-2,[],[]],[-1,-2,[],[]],[[153,216]],[[153,101]],[[153,101],12],[153],[[153,153],[[27,[88]]]],[[153,153]],[[153,153],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,[[89,89]],[[89,89],12],[89,42],[89,42],[89,101],[89,180],[89,42],[89,101],[89,42],[-1,-2,[],[]],[-1,-2,[],[]],[89,89],[[-1,-2],12,[],[]],[[89,89],88],[[89,101]],[[89,101],12],[[89,89],59],[[89,2],3],[-1,-1,[]],[178,89],[42,89],[93,89],[17,89],[101,89],[42,89],[[89,-1],12,69],[-1,-2,[],[]],[[89,101]],[[89,101],12],[[89,89],[[27,[88]]]],[[89,89]],[[89,89],12],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,[178,42],[-1,-2,[],[]],[-1,-2,[],[]],[178,178],[[-1,-2],12,[],[]],[[178,178],88],[[178,42]],[[178,178],59],[[178,2],3],[-1,-1,[]],[89,178],[42,178],[[178,-1],12,69],[-1,-2,[],[]],[[178,178],[[27,[88]]]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,[[110,110]],[110,101],[110,101],[-1,-2,[],[]],[-1,-2,[],[]],[110,110],[[-1,-2],12,[],[]],[[],110],[[110,110],59],[[110,2],3],[-1,-1,[]],[101,110],[101,110],[-1,-2,[],[]],[[110,110],[[27,[88]]]],[[110,110]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1]]],-1,[]],[[[53,[-1]]],-1,[]],[[[53,[-1]]],12,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[277,[-1]]],[[53,[-1]]],[]],[-1,[[277,[-1]]],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[277,[-1]]],[[27,[[53,[-1]]]]],[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[4,"TickError",3],[3,"Formatter",3353],[6,"Result",3353],[8,"Peripherals",454],[4,"CreationError",3],[8,"Debug",3353],[3,"ComponentsConfig",570],[3,"CommunicationConfig",38],[3,"PanicHandler",2987],[3,"Printer3D",3],[4,"Result",3354],[15,"tuple"],[3,"TypeId",3355],[4,"CreationError",38],[8,"Wifi",3356],[8,"Communicator",175],[15,"u8"],[8,"SpiDevice",3357],[4,"TickError",38],[3,"MultiThreadCommunication",38],[3,"JoinHandle",3358],[3,"Error",3359],[3,"CommandsSender",219],[3,"Communication",38],[3,"WifiCommunicator",180],[4,"SendablePeripherals",38],[4,"Option",3360],[8,"FnOnce",3361],[3,"Box",3362],[3,"Printer3DComponents",454],[3,"Resources",320],[4,"HttpRequest",274],[4,"CreationError",180],[8,"HttpServer",180],[3,"CreationConfig",180],[4,"Command",219],[3,"CommandsReceiver",219],[3,"TryIter",3363],[3,"SendError",3363],[3,"GCodeHistory",248],[3,"String",3364],[15,"u32"],[15,"str"],[3,"PrinterState",260],[8,"Serializer",3365],[3,"TemperaturePidController",2818],[3,"HttpRequestIter",274],[4,"Method",3366],[15,"usize"],[3,"ResourcesImpl",320],[3,"FileSystem",1056],[3,"PrintProcess",2767],[3,"MutexGuard",3331],[3,"OverTheAirUpdater",350],[3,"Security",384],[3,"OverTheAirUpdate",350],[8,"Ota",3367],[4,"OverTheAirUpdateWriteError",350],[15,"bool"],[15,"slice"],[3,"Percentage",3016],[3,"Request",3368],[8,"Connection",3368],[3,"IpAddress",384],[4,"CreationError",384],[3,"Configuration",384],[4,"PasswordConfiguration",384],[8,"Sized",3369],[8,"Hasher",3370],[4,"TickError",454],[8,"ZAxisProbe",2421],[8,"Timer",1979],[4,"CreationError",454],[8,"Uart",1994],[4,"BLTouchCommand",626],[3,"BLTouch",626],[8,"PwmPin",1974],[8,"InputPin",3371],[8,"InterruptPin",1952],[8,"FnMut",3361],[8,"Send",3369],[3,"Button",661],[4,"Trigger",1952],[3,"CartridgeHeater",677],[3,"Fan",687],[3,"ServoPosition",697],[6,"Angle",3094],[4,"Ordering",3372],[3,"SmallDuration",3247],[3,"ServoMotor",697],[4,"FeatureRegister",728],[3,"MT29F2G01ABAGDWB",728],[15,"u16"],[3,"SpiFlashMemory",728],[3,"RangeInclusive",3373],[8,"FlashMemoryChip",728],[4,"ValidateIdError",728],[4,"RotationalDirection",820],[3,"StepperMotor",820],[8,"OutputPin",3371],[15,"f32"],[4,"MicrostepsPerStep",850],[4,"UARTAddress",850],[3,"TMC2209",850],[4,"ReadRegisterError",850],[4,"IOIN",850],[3,"Thermistor",1045],[8,"Adc",1933],[8,"AdcPin",1933],[3,"Temperature",3309],[4,"ReadPercentageError",1933],[3,"FileWriter",1134],[3,"NotEnoughSpaceAvailable",1202],[8,"Into",3374],[3,"FileId",1202],[4,"DeleteFileError",1056],[4,"CreationError",1056],[3,"FileMetadata",1202],[3,"RegionsConfig",1119],[3,"FileReader",1134],[3,"FileDoesntExist",1202],[3,"BadBlockTable",1094],[3,"BadBlockTableBytes",1094],[3,"FilesRegion",1134],[3,"FileMetadataValidator",1202],[4,"WriteError",1134],[4,"ReadError",1134],[4,"ReadNameError",1134],[3,"FilesMetadatasRegion",1202],[15,"array"],[8,"Any",3355],[4,"Status",1291],[3,"GCodeExecuter",1641],[3,"G0",1316],[3,"G1",1316],[3,"G20",1316],[3,"G21",1316],[3,"G28",1316],[3,"G60",1316],[3,"G61",1316],[3,"G90",1316],[3,"G91",1316],[3,"G92",1316],[3,"M82",1316],[3,"M83",1316],[3,"M104",1316],[3,"M109",1316],[3,"M140",1316],[3,"M190",1316],[3,"M106",1316],[3,"M107",1316],[8,"GCodeCommand",1291],[3,"Distance",3185],[3,"InvalidPositionSlot",1641],[4,"PositionMode",1641],[4,"TickError",1641],[3,"VectorN",3046],[4,"Units",3185],[3,"Param",1702],[8,"Clone",3375],[8,"GCodeParameterIdentifier",1722],[8,"GCodeParameterValue",1882],[8,"PartialEq",3372],[15,"never"],[3,"E",1722],[3,"F",1722],[3,"P",1722],[3,"R",1722],[3,"S",1722],[3,"X",1722],[3,"Y",1722],[3,"Z",1722],[3,"AnyWithoutSpaces",1722],[8,"IdentifierInGroup",1722],[3,"NoValue",1882],[3,"GCodeParser",1900],[4,"GCodeLine",1900],[3,"Frequency",3289],[3,"Duration",3376],[15,"u64"],[3,"MockOtaUpdate",2005],[3,"MockOtaUpdateFinished",2005],[3,"MockWifiDriver",2005],[3,"MockSystemTime",2005],[3,"MockAdcReading",2005],[3,"MockTimer",2005],[3,"MockOta",2005],[3,"MockWatchdog",2005],[3,"MockZAxisProbe",2005],[3,"MockHttpConnection",2005],[3,"MockUart",2005],[3,"MockPeripherals",2005],[3,"MockError",2005],[3,"Slot",3367],[4,"Capability",3377],[3,"EnumSet",3378],[4,"Configuration",3377],[3,"MockPwmPin",2005],[3,"MockTimerAdditionalFunctionality",2005],[3,"MockHeaders",2005],[3,"MockInputPin",2005],[4,"ErrorKind",3371],[4,"ErrorKind",3357],[4,"ErrorKind",3379],[3,"MockAdc",2005],[3,"MockAdcPin",2005],[3,"MockHttpServer",2005],[3,"AccessPointInfo",3377],[3,"Vec",3380],[3,"Vec",3381],[3,"MockOutputPin",2005],[3,"MockSpi",2005],[4,"Operation",3357],[3,"MockWatchdogCreator",2005],[3,"RotationToLinearMotion",2294],[15,"i32"],[4,"SetPausedError",2294],[4,"CreationError",2294],[3,"MotionController",2294],[8,"Kinematics",2543],[4,"Axis",2403],[3,"MoveId",2582],[3,"CreationParameters",2294],[3,"CreationConfig",2294],[8,"Endstop",2521],[3,"BlocksBufferIsFull",2582],[3,"Probe",2421],[4,"TickError",2469],[4,"UnifiedBedLevelingProcedure",2421],[6,"Vector3",3046],[3,"UnifiedBedLeveling",2421],[6,"Vector2",3046],[4,"HomingProcedure",2469],[4,"HomingMove",2469],[3,"Planner",2582],[3,"ManualEndstop",2521],[3,"CartesianKinematics",2543],[3,"CoreXYKinematics",2543],[4,"Flag",2582],[3,"Block",2582],[8,"Deserializer",3382],[3,"Settings",2582],[3,"StepperMotorsTicker",2728],[3,"KinematicsFunctions",2695],[3,"Communication",2695],[4,"Level",3383],[4,"EnableError",2728],[4,"CreationError",2728],[4,"PrintProcessError",2767],[3,"LineToExecuteParsed",2767],[3,"PrintProcessOk",2767],[4,"PidUpdateError",2818],[3,"TemperaturePidGains",2818],[3,"TemperatureSafety",2870],[15,"f64"],[4,"TemperatureError",2870],[3,"TemperatureChangeConfig",2920],[3,"AllowedTemperatureRangeSafety",2910],[3,"TemperatureChangeSafety",2920],[8,"ProtectionModeTrait",2920],[3,"KeepMode",2948],[3,"RisingMode",2948],[3,"Clock",2970],[8,"SystemTime",2970],[8,"Copy",3369],[3,"Bresenham",3001],[8,"PartialOrd",3372],[8,"Sub",3384],[8,"Mul",3384],[8,"Add",3384],[8,"Div",3384],[3,"AngleGeneric",3094],[8,"AngleFunctions",3094],[8,"Default",3385],[8,"Display",3353],[3,"ParseIntError",3386],[3,"Mutex",3331],[13,"PeripheralMissing",144],[13,"ComponentsThread",145],[13,"CommunicationThread",145],[8,"Protection",384],[8,"ProtectionInput",384],[8,"GetIpAddress",384],[13,"PasswordAndBruteforce",449],[13,"Password",449],[13,"PeripheralMissing",569],[3,"SafetyConfig",584],[3,"ThermistorConfig",584],[3,"PidConfig",584],[8,"FlashMemoryChipExt",728],[4,"CHOPCONF",850],[4,"PWMCONF",850],[4,"IHOLD_IRUN",850],[4,"GCONF",850],[4,"SLAVECONF",850],[4,"GSTAT",850],[3,"VACTUAL",850],[8,"AsAny",1291],[13,"PreparingCommand",1700],[13,"ExecutingCommand",1700],[8,"GCodeParameterIdentifierLetter",1722],[8,"AdcPinExt",1933],[8,"TimerAdditionalFunctionality",1979],[8,"Watchdog",1999],[8,"WatchdogCreator",1999],[3,"MotorConfig",2294],[13,"CenteringForZAxis",2520],[8,"NumberExt",3016],[8,"EpsilonAngle",3094]],"b":[[1711,"impl-From%3CV%3E-for-Param%3CI,+V%3E"],[1713,"impl-From%3COption%3CV%3E%3E-for-Param%3CI,+V%3E"],[2159,"impl-Error-for-MockError"],[2160,"impl-Error-for-MockError"],[2161,"impl-Error-for-MockError"],[2625,"impl-PartialEq-for-Flag"],[2626,"impl-PartialEq%3CEnumSet%3CFlag%3E%3E-for-Flag"],[2889,"impl-PartialEq-for-TemperatureError"],[2890,"impl-PartialEq%3CEnumSet%3CTemperatureError%3E%3E-for-TemperatureError"],[3028,"impl-Display-for-Percentage"],[3029,"impl-Debug-for-Percentage"],[3081,"impl-VectorN%3C3%3E"],[3082,"impl-VectorN%3C2%3E"],[3085,"impl-VectorN%3C3%3E"],[3086,"impl-VectorN%3C2%3E"],[3144,"impl-Display-for-AngleGeneric%3CT%3E"],[3145,"impl-Debug-for-AngleGeneric%3CT%3E"],[3215,"impl-Div-for-Distance"],[3216,"impl-Div%3Ci32%3E-for-Distance"],[3232,"impl-Mul%3Ci32%3E-for-Distance"],[3233,"impl-Mul%3Cf32%3E-for-Distance"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
